{"version":3,"sources":["components/burger-constructor/constructor-item/ConstructorItem.module.css","components/ingredient-details/ingredient-details-item/IngredientDetailsItem.module.css","components/modal-overlay/ModalOverlay.module.css","components/order-details/OrderDetails.module.css","components/orders/Orders.module.css","pages/orders-feed/OrdersFeed.module.css","components/orders-feed/OrdersFeed.module.css","components/burger-ingredients/BurgerIngredients.module.css","components/orders-card-details/OrdersCardDetails.module.css","services/constants/constValue.ts","services/constants/actionTypes.ts","services/reducers/ingredients.ts","services/reducers/constructor.ts","services/reducers/order.ts","services/reducers/viewedItem.ts","services/reducers/sign.ts","services/reducers/wsAll.ts","services/reducers/wsSign.ts","services/reducers/viewedOrder.ts","services/reducers/index.ts","services/actions/constructor.ts","services/middleware/socketOrdersAll.ts","services/types/data.ts","services/types/menu.ts","services/api/index.ts","utils/mocks/data-mock-empty.ts","services/actions/ingredients.ts","services/token/token.ts","services/actions/order.ts","services/actions/sign.ts","services/actions/viewedOrder.ts","services/store/index.ts","services/actions/wsAll.ts","services/middleware/socketOrdersSign.ts","services/actions/wsSign.ts","services/hooks/index.ts","utils/data/data-menu.ts","components/app-header/menu-item/MenuItem.tsx","components/app-header/menu-item/index.ts","components/app-header/index.ts","components/app-header/AppHeader.tsx","components/burger-constructor/constructor-item/index.ts","components/burger-constructor/constructor-item/ConstructorItem.tsx","services/constants/itemTypes.ts","components/burger-constructor/constructor-item-swap/ConstructorItemSwap.tsx","components/burger-constructor/constructor-item-swap/index.ts","components/burger-constructor/index.ts","components/burger-constructor/BurgerConstructor.tsx","components/burger-ingredients/ingredient-item/IngredientItem.tsx","components/burger-ingredients/ingredient-item/index.ts","components/burger-ingredients/index.ts","components/burger-ingredients/BurgerIngredients.tsx","components/ingredient-details/ingredient-details-item/index.ts","components/ingredient-details/ingredient-details-item/IngredientDetailsItem.tsx","components/ingredient-details/index.ts","components/ingredient-details/IngredientDetails.tsx","services/actions/viewedItem.ts","components/modal-overlay/ModalOverlay.tsx","components/modal/index.ts","components/modal/Modal.tsx","images/spin-white.svg","images/order-done.svg","services/functions/formatDistanceDayToNow.ts","services/functions/leftFillNum.ts","components/order-details/index.ts","components/order-details/OrderDetails.tsx","images/icon-info.svg","components/order-failed/index.ts","components/order-failed/OrderFailed.tsx","services/constants/initialValue.ts","components/sign-login/index.ts","components/sign-login/Login.tsx","components/sign-register/index.ts","components/sign-register/Register.tsx","components/sign-profile/index.ts","components/sign-profile/Profile.tsx","components/sign-forgot-password/index.ts","components/sign-forgot-password/ForgotPassword.tsx","components/sign-reset-password/index.ts","components/sign-reset-password/ResetPassword.tsx","components/protected-route/index.ts","components/protected-route/ProtectedRoute.tsx","components/sign-route/index.ts","components/sign-route/SignRoute.tsx","components/orders/index.ts","components/orders/Orders.tsx","components/sign-profile-nav/index.ts","components/sign-profile-nav/ProfileNav.tsx","components/orders-feed/index.ts","components/orders-feed/OrdersFeed.tsx","components/orders-card/index.ts","components/orders-card/OrdersCard.tsx","components/orders-card-details/index.ts","components/orders-card-details/OrdersCardDetails.tsx","pages/home/index.ts","pages/home/Home.tsx","pages/login/index.ts","pages/login/Login.tsx","pages/profile/index.ts","pages/profile/Profile.tsx","pages/register/index.ts","pages/register/Register.tsx","pages/forgot-password/index.ts","pages/forgot-password/ForgotPassword.tsx","pages/reset-password/index.ts","pages/reset-password/ResetPassword.tsx","pages/not-found/index.ts","pages/not-found/NotFound.tsx","pages/ingredient/index.ts","pages/ingredient/Ingredient.tsx","pages/orders-feed/index.ts","pages/orders-feed/OrdersFeed.tsx","pages/orders-card-details/index.ts","pages/orders-card-details/OrdersCardDetails.tsx","components/app/index.ts","components/app/App.tsx","reportWebVitals.ts","index.tsx","components/sign-login/Login.module.css","components/orders-card/OrdersCard.module.css","components/sign-register/Register.module.css","components/sign-forgot-password/ForgotPassword.module.css","components/sign-reset-password/ResetPassword.module.css","components/sign-profile-nav/ProfileNav.module.css","components/app-header/AppHeader.module.css","components/burger-constructor/BurgerConstructor.module.css","components/burger-ingredients/ingredient-item/IngredientItem.module.css","pages/profile/Profile.module.css","pages/not-found/NotFound.module.css","pages/orders-card-details/OrdersCardDetails.module.css","components/app-header/menu-item/MenuItem.module.css","components/burger-constructor/constructor-item-swap/ConstructorItemSwap.module.css","components/ingredient-details/IngredientDetails.module.css","components/modal/Modal.module.css","components/sign-profile/Profile.module.css","pages/home/Home.module.css","pages/ingredient/Ingredient.module.css","components/app/App.module.css"],"names":["module","exports","EToken","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","GET_CONSTRUCTOR_INGREDIENT","ADD_CONSTRUCTOR_INGREDIENT","DELETE_CONSTRUCTOR_INGREDIENT","RESET_CONSTRUCTOR","SWAP_CONSTRUCTOR_INGREDIENT","SET_VIEW_ITEM","RESET_VIEW_ITEM","SET_VIEW_ORDER","RESET_VIEW_ORDER","GET_VIEW_ORDER_REQUEST","GET_VIEW_ORDER_SUCCESS","GET_VIEW_ORDER_FAILED","SET_VIEW_ORDER_ERROR","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","SET_ORDER_ERROR","GET_AUTH_REQUEST","GET_AUTH_SUCCESS","GET_AUTH_FAILED","SET_AUTH_ERROR","GET_REGISTER_REQUEST","GET_REGISTER_SUCCESS","GET_REGISTER_FAILED","SET_REGISTER_ERROR","GET_PROFILE_REQUEST","GET_PROFILE_SUCCESS","GET_PROFILE_FAILED","SET_PROFILE_ERROR","SET_PROFILE_CLEAR","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_CONNECTION_STOP","WS_SIGN_CONNECTION_START","WS_SIGN_CONNECTION_SUCCESS","WS_SIGN_CONNECTION_ERROR","WS_SIGN_CONNECTION_CLOSED","WS_SIGN_GET_MESSAGE","WS_SIGN_CONNECTION_STOP","initialState","data","isFetching","fetchingFailed","lastUpdated","error","sortedData","bun","fillers","empty","total","numberOrd","user","isAuthorized","wsConnected","wsConnectionFailed","isLoaded","rootReducer","combineReducers","cart","state","action","type","payload","filter","item","indx","dragIndex","hoverIndex","splice","ingredients","order","number","viewedItem","sign","wsAll","wsSign","viewedOrder","addConstructorIngredient","API_URL","wsUrl","EItemType","EOrderStatus","EItemIcon","ACCESS_TOKEN","REFRESH_TOKEN","ITEM_DETAILS","PROFILE_NAV_TEXT","headers","post","get","apiGetIngredientsRequest","a","fetch","checkoutRequest","idOrderIngredients","token","method","authorization","body","JSON","stringify","postRegisterRequest","postLoginRequest","postLogoutRequest","patchProfileRequest","apiGetProfileRequest","postForgotPasswordRequest","postResetPasswordRequest","getOrderDetailsRequest","id","dataEmpty","getIngredients","dispatch","then","response","ok","json","Promise","reject","status","result","find","catch","e","console","log","setToken","accessToken","refreshToken","bearerToken","Date","getTime","includes","split","Cookies","set","localStorage","setItem","getToken","getOrderNumber","getOrderSuccess","getAuthRequest","getAuthFailed","getProfileRequest","getProfileSuccess","getProfileFailed","getRegister","getRegisterSuccess","getLogin","getAuthSuccess","getLogout","remove","removeItem","getProfile","success","res","message","setViewOrder","getOrderDetails","orders","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","socket","next","WebSocket","close","onopen","event","onerror","onmessage","send","parse","totalToday","onclose","socketOrdersSignMiddleware","createStore","useDispatch","dispatchHook","useSelector","selectorHook","dataMenu","left","burgerIcon","listIcon","right","profileIcon","componentsIcon","BurgerIcon","ListIcon","ProfileIcon","page","MenuIcon","icon","to","href","className","styles","menu_link","activeClassName","menu_link_active","exact","email","name","container","menu","map","title","logo","menu_right","itemData","isLocked","text","thumbnail","image_mobile","price","ItemTypes","style","cursor","index","moveElem","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","current","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","isDragging","drag","opacity","drag_icon","handleClose","openModal","prodData","dropTarget","coverData","Object","keys","length","middleData","Array","isArray","totalBurgerPrice","React","useMemo","reduce","sum","swapConstructorIngredient","item_list","_id","scroll_list","checkout_container","size","onClick","itemCounter","onItemClick","history","useHistory","dragRef","replace","background","count","src","image","item_image","alt","item_description","item_name","useState","currentTab","setCurrentTab","useInView","threshold","bunsRef","inViewBuns","mainsRef","inViewFilling","saucesRef","inViewSauces","useEffect","setTab","tab","element","document","getElementById","scrollIntoView","behavior","buhData","typeBun","sauceData","typeSauce","mainData","typeMain","countItem","itemId","countItemBun","header_tabs","tabs","value","active","sec_items","sec_title","items_list","details_list_item","useParams","image_large","details_list","calories","proteins","fat","carbohydrates","ModalOverlay","closeModal","modal_overlay","children","modalTitle","closeModalByEscKey","key","stopImmediatePropagation","addEventListener","removeEventListener","modalRoot","querySelector","ReactDOM","createPortal","modal","header","formatDistanceDayToNow","date","oneDay","distance","now","formatDistanceToNow","locale","ru","addSuffix","leftFillNum","num","targetLength","toString","padStart","icon_done","spinWhite","orderDone","orderInfo","INITIAL_FORM_LOGIN","password","INITIAL_FORM_REGISTER","INITIAL_FORM_RESET_PASSWD","INITIAL_FORM_FORGOT_PASSWD","INITIAL_FORM_PROFILE","form","setForm","onFieldChange","target","fieldName","checked","prev","onReset","login","onSubmit","preventDefault","input_container","onChange","placeholder","button_container","link_container","link","push","pathname","resetPassword","getForgotPassword","noValidate","location","useLocation","getResetPassword","ProtectedRoute","rest","render","from","SignRoute","order_list","nav__list","doneOrders","pendingOrders","content_wrapper","info_wrapper","info_table","done","list","doneOrder","list_item","list_item_done","progress","pendingOrder","total_count","today_count","cardOfProfile","orderIngredientsWDetails","ingredient","orderIngredients","orderIngredientsWDetailsGroups","forEach","elem","groupItem","orderTotalPrice","createdAt","order_item","groupedIngredients","ingredientsWDetails","order_info","order_number","format","ingredients_info","ingredients_list","idx","ingredient_wrapper","zIndex","width","count_wrapper","ingredients_price","card_details_wrapper","img_wrapper","img","ingredient_cost","ingredients_footer","visibleOrderDetails","setVisibleOrderDetails","visibleOrderFailed","setVisibleOrderFailed","visibleIngredientDetails","setVisibleIngredientDetails","match","useRouteMatch","isExact","path","wrapper","DndProvider","backend","HTML5Backend","main","idsCard","navText","setNavText","getItem","profile","nav_container","nav__text","content","idItem","nav_panel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.d96f2eda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ConstructorItem_item__2vO7I\",\"item_elem\":\"ConstructorItem_item_elem__2H1Av\",\"drag_icon\":\"ConstructorItem_drag_icon__2yAMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IngredientDetailsItem_container__CTYFC\",\"details_list\":\"IngredientDetailsItem_details_list__3uz8G\",\"details_list_item\":\"IngredientDetailsItem_details_list_item__3MJgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_overlay\":\"ModalOverlay_modal_overlay__2uEVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon_done\":\"OrderDetails_icon_done__2pZiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_list\":\"Orders_order_list__YKgyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrdersFeed_wrapper__3OmOZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"OrdersFeed_content_wrapper__2ZjH0\",\"header\":\"OrdersFeed_header__qIb7J\",\"order_list\":\"OrdersFeed_order_list__2AAQG\",\"info_wrapper\":\"OrdersFeed_info_wrapper__30mtD\",\"info_table\":\"OrdersFeed_info_table__35tja\",\"done\":\"OrdersFeed_done__2_Sx9\",\"progress\":\"OrdersFeed_progress__19uS2\",\"list\":\"OrdersFeed_list__3qawk\",\"list_item\":\"OrdersFeed_list_item__17gYC\",\"list_item_done\":\"OrdersFeed_list_item_done___EpfC\",\"count\":\"OrdersFeed_count__12pYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BurgerIngredients_container__Grtup\",\"scroll_list\":\"BurgerIngredients_scroll_list__24p_y\",\"header_tabs\":\"BurgerIngredients_header_tabs__3kjRv\",\"tabs\":\"BurgerIngredients_tabs__6O6XR\",\"sec_items\":\"BurgerIngredients_sec_items__1IOcv\",\"items_list\":\"BurgerIngredients_items_list__2gWq9\",\"item\":\"BurgerIngredients_item__3raBc\",\"item_image\":\"BurgerIngredients_item_image__77xGC\",\"item_description\":\"BurgerIngredients_item_description__3XxIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"OrdersCardDetails_header__28RlY\",\"card_details_wrapper\":\"OrdersCardDetails_card_details_wrapper__3PyeN\",\"order_id\":\"OrdersCardDetails_order_id__3ovaE\",\"orders_item\":\"OrdersCardDetails_orders_item__5aA8J\",\"order_info\":\"OrdersCardDetails_order_info__IyK9f\",\"status\":\"OrdersCardDetails_status__11NDj\",\"done\":\"OrdersCardDetails_done__TKuDZ\",\"ingredients_cost\":\"OrdersCardDetails_ingredients_cost__-glD5\",\"ingredients_list\":\"OrdersCardDetails_ingredients_list__36TLQ\",\"ingredient_wrapper\":\"OrdersCardDetails_ingredient_wrapper__1ZDDb\",\"img_wrapper\":\"OrdersCardDetails_img_wrapper__3pOPZ\",\"img\":\"OrdersCardDetails_img__3egF8\",\"name\":\"OrdersCardDetails_name__3zjdC\",\"ingredient_cost\":\"OrdersCardDetails_ingredient_cost__3Xe-2\",\"ingredients_footer\":\"OrdersCardDetails_ingredients_footer__3M4ig\"};","const API_URL = 'https://norma.nomoreparties.space/api';\r\nconst WS_URL = 'wss://norma.nomoreparties.space/orders/all';\r\nconst WS_SIGN_URL = 'wss://norma.nomoreparties.space/orders';\r\n\r\nexport enum EToken {\r\n    ACCESS_TOKEN = 'accessToken',\r\n    REFRESH_TOKEN = 'refreshToken' \r\n};\r\nconst ACCESS_TOKEN = 'accessToken';\r\nconst REFRESH_TOKEN = 'refreshToken';\r\nconst ITEM_DETAILS = {\r\n    calories: 'Калории, ккал',\r\n    proteins: 'Белки, г',\r\n    fat: 'Жиры, г',\r\n    carbohydrates: 'Углеводы, г'\r\n};\r\nconst PROFILE_NAV_TEXT = {\r\n    profile: 'В этом разделе вы можете изменить свои персональные данные',    \r\n    orders: 'В этом разделе вы можете просмотреть свою историю заказов'\r\n};\r\n\r\nconst ORDER_STATUS = {\r\n    done: \"Выполнен\",\r\n    pending: \"Готовиться\",\r\n    created: \"Создан\"\r\n  };\r\n\r\n  \r\nexport {\r\n    API_URL,\r\n    REFRESH_TOKEN,\r\n    ACCESS_TOKEN,\r\n    ITEM_DETAILS,\r\n    WS_URL,\r\n    WS_SIGN_URL,\r\n    PROFILE_NAV_TEXT,\r\n    ORDER_STATUS\r\n};","//ingredients\r\n///export const GET_INGREDIENTS = 'GET_INGREDIENTS';\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST' as const;\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS' as const;\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED' as const;\r\n//constructor \r\nexport const GET_CONSTRUCTOR_INGREDIENT = 'GET_CONSTRUCTOR_INGREDIENT' as const;\r\nexport const ADD_CONSTRUCTOR_INGREDIENT = 'ADD_CONSTRUCTOR_INGREDIENT' as const;\r\nexport const DELETE_CONSTRUCTOR_INGREDIENT = 'DELETE_CONSTRUCTOR_INGREDIENT' as const;\r\nexport const RESET_CONSTRUCTOR = 'RESET_CONSTRUCTOR' as const\r\nexport const SWAP_CONSTRUCTOR_INGREDIENT = 'SWAP_CONSTRUCTOR_INGREDIENT' as const;\r\n//viewedItem\r\nexport const SET_VIEW_ITEM = 'SET_VIEW_ITEM' as const;\r\nexport const RESET_VIEW_ITEM = 'RESET_VIEW_ITEM' as const;\r\n//viewedOrder\r\nexport const SET_VIEW_ORDER = 'SET_VIEW_ORDER' as const;\r\nexport const RESET_VIEW_ORDER = 'RESET_VIEW_ORDER' as const;\r\nexport const GET_VIEW_ORDER_REQUEST = 'GET_VIEW_ORDER_REQUEST' as const;\r\nexport const GET_VIEW_ORDER_SUCCESS = 'GET_VIEW_ORDER_SUCCESS' as const;\r\nexport const GET_VIEW_ORDER_FAILED = 'GET_VIEW_ORDER_FAILED' as const;\r\nexport const SET_VIEW_ORDER_ERROR = 'SET_VIEW_ORDER_ERROR' as const;\r\n//order\r\n///export const GET_ORDER_NUMBER = 'GET_ORDER_NUMBER'; \r\nexport const GET_ORDER_NUMBER_REQUEST = 'GET_ORDER_NUMBER_REQUEST' as const;\r\nexport const GET_ORDER_NUMBER_SUCCESS = 'GET_ORDER_NUMBER_SUCCESS' as const;\r\nexport const GET_ORDER_NUMBER_FAILED = 'GET_ORDER_NUMBER_FAILED' as const;\r\nexport const GET_ORDER_REQUEST = 'GET_ORDER_REQUEST' as const;\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS' as const;\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED' as const;\r\nexport const SET_ORDER_ERROR = 'SET_ORDER_ERROR' as const;\r\n//modals\r\nexport const OPEN_MODAL_DETAILS = 'OPEN_MODAL_DETAILS' as const;\r\nexport const CLOSE_MODAL_DETAILS = 'CLOSE_MODAL_DETAILS' as const;\r\nexport const OPEN_MODAL_ORDER = 'OPEN_MODAL_ORDER' as const;\r\nexport const CLOSE_MODAL_ORDER = 'CLOSE_MODAL_ORDER' as const;\r\n//sign\r\nexport const GET_AUTH_REQUEST = 'GET_AUTH_REQUEST' as const;\r\nexport const GET_AUTH_SUCCESS = 'GET_AUTH_SUCCESS' as const;\r\nexport const GET_AUTH_FAILED = 'GET_AUTH_FAILED' as const;\r\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR' as const;\r\nexport const GET_REGISTER_REQUEST = 'GET_REGISTER_REQUEST' as const;\r\nexport const GET_REGISTER_SUCCESS = 'GET_REGISTER_SUCCESS' as const;\r\nexport const GET_REGISTER_FAILED = 'GET_REGISTER_FAILED' as const;\r\nexport const SET_REGISTER_ERROR = 'SET_REGISTER_ERROR' as const;\r\nexport const GET_PROFILE_REQUEST = 'GET_PROFILE_REQUEST' as const;\r\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS' as const;\r\nexport const GET_PROFILE_FAILED = 'GET_PROFILE_FAILED' as const;\r\nexport const SET_PROFILE_ERROR = 'SET_PROFILE_ERROR' as const;\r\nexport const SET_PROFILE_CLEAR = 'SET_PROFILE_CLEAR' as const;\r\n\r\n//ws\r\nexport const WS_CONNECTION_START = 'WS_CONNECTION_START' as const;\r\nexport const WS_CONNECTION_SUCCESS = 'WS_CONNECTION_SUCCESS' as const;\r\nexport const WS_CONNECTION_ERROR = 'WS_CONNECTION_ERROR' as const;\r\nexport const WS_CONNECTION_CLOSED = 'WS_CONNECTION_CLOSED' as const;\r\nexport const WS_GET_MESSAGE = 'WS_GET_MESSAGE' as const;\r\nexport const WS_SEND_MESSAGE = 'WS_SEND_MESSAGE' as const;\r\nexport const WS_CONNECTION_STOP = 'WS_CONNECTION_STOP' as const;\r\n\r\nexport const WS_SIGN_CONNECTION_START = 'WS_SIGN_CONNECTION_START' as const;\r\nexport const WS_SIGN_CONNECTION_SUCCESS = 'WS_SIGN_CONNECTION_SUCCESS' as const;\r\nexport const WS_SIGN_CONNECTION_ERROR = 'WS_SIGN_CONNECTION_ERROR' as const;\r\nexport const WS_SIGN_CONNECTION_CLOSED = 'WS_SIGN_CONNECTION_CLOSED' as const;\r\nexport const WS_SIGN_GET_MESSAGE = 'WS_SIGN_GET_MESSAGE' as const;\r\nexport const WS_SIGN_SEND_MESSAGE = 'WS_SIGN_SEND_MESSAGE' as const;\r\nexport const WS_SIGN_CONNECTION_STOP = 'WS_SIGN_CONNECTION_STOP' as const;","import type { TIngredient } from '../types/data';\r\nimport type { TIngredientsActions } from '../actions';\r\nimport {\r\n    GET_INGREDIENTS_FAILED,\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    \r\n  } from '../constants/actionTypes';\r\n\r\n  type TIngredientsState = {\r\n    data: ReadonlyArray<TIngredient>;\r\n    isFetching: boolean,\r\n    fetchingFailed: boolean,    \r\n    lastUpdated: number | null\r\n    error: string | null\r\n  }\r\n    \r\n  export const initialState: TIngredientsState = {\r\n    data: [],\r\n    isFetching: false,\r\n    fetchingFailed: false,\r\n    lastUpdated: null,\r\n    error: null\r\n  };\r\n  \r\nexport const ingredientsReducer = (state = initialState, action: TIngredientsActions): TIngredientsState => {\r\n \r\n    switch (action.type) {\r\n      case GET_INGREDIENTS_REQUEST: {\r\n        return {\r\n          ...state,\r\n          isFetching: true\r\n        };\r\n      }\r\n      case GET_INGREDIENTS_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          fetchingFailed: false,\r\n          data: action.payload,\r\n          //lastUpdated: Date.now(),\r\n          isFetching: false\r\n        };\r\n      }\r\n      case GET_INGREDIENTS_FAILED: {\r\n        return {\r\n          ...state,\r\n          fetchingFailed: true,\r\n          isFetching: false\r\n        };\r\n      }\r\n  \r\n      \r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n  ","import type { TIngredient } from '../types/data';\r\nimport type { TConstructorActions } from '../actions';\r\nimport {\r\n    GET_CONSTRUCTOR_INGREDIENT,\r\n    ADD_CONSTRUCTOR_INGREDIENT,\r\n    DELETE_CONSTRUCTOR_INGREDIENT,\r\n    RESET_CONSTRUCTOR,\r\n    SWAP_CONSTRUCTOR_INGREDIENT\r\n} from '../constants/actionTypes';\r\n\r\ntype TConstructorState = {\r\n    data: ReadonlyArray<TIngredient>;\r\n    sortedData: {\r\n        bun: Readonly<TIngredient> ,\r\n        fillers: Array<TIngredient>,\r\n        empty: Readonly<TIngredient> \r\n    },\r\n    total: number,\r\n    lastUpdated: number | null\r\n};\r\n\r\nexport const initialState: TConstructorState= {\r\n    data: [],\r\n    sortedData: {\r\n        bun: {} as TIngredient,\r\n        fillers: [],\r\n        empty: {} as TIngredient \r\n    },\r\n\r\n    total: 0,\r\n    lastUpdated: null\r\n  };\r\n  \r\n  export const constructorReducer = (state = initialState, action: TConstructorActions): TConstructorState  => {\r\n    \r\n     \r\n    switch (action.type) {\r\n        case ADD_CONSTRUCTOR_INGREDIENT: {\r\n\r\n            let sortedData = { ...state.sortedData };           \r\n            if (action.payload.type === 'empty') {               \r\n                sortedData = { ...sortedData, empty: action.payload };\r\n            }\r\n            else if (action.payload.type === 'bun') {               \r\n                sortedData = { ...sortedData, bun: action.payload };\r\n            }\r\n            else {\r\n                sortedData = { ...sortedData, fillers: [...sortedData.fillers, action.payload] };\r\n            }\r\n            return {\r\n                ...state,\r\n                data: [...state.data, action.payload],\r\n                sortedData,\r\n               // lastUpdated: Date.now()\r\n            };\r\n\r\n\r\n        }\r\n        case DELETE_CONSTRUCTOR_INGREDIENT: {\r\n            const sortedData = { ...state.sortedData };\r\n            sortedData.fillers = sortedData.fillers.filter((item,indx) => action.payload !== indx);\r\n            return {\r\n                ...state,\r\n                sortedData,\r\n               // lastUpdated: Date.now()\r\n            };\r\n        } \r\n        case SWAP_CONSTRUCTOR_INGREDIENT: {\r\n            const { dragIndex, hoverIndex } = action.payload;\r\n            const sortedData = { ...state.sortedData };\r\n            //console.log(`SWAP - ${dragIndex} - ${hoverIndex}`);            \r\n            sortedData.fillers[dragIndex] = sortedData.fillers.splice(hoverIndex, 1, sortedData.fillers[dragIndex])[0];\r\n            return {\r\n                ...state,\r\n                sortedData,\r\n                //lastUpdated: Date.now()\r\n            };\r\n          }\r\n          \r\n        case GET_CONSTRUCTOR_INGREDIENT: {            \r\n            return {\r\n                ...state,\r\n                data: [...state.data, ...action.payload],               \r\n                //lastUpdated: Date.now()\r\n            };\r\n        }    \r\n        case RESET_CONSTRUCTOR: {\r\n            return initialState ;\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import type { TOrder } from '../types/data';\r\nimport type { TOrderActions } from '../actions';\r\n\r\nimport {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    SET_ORDER_ERROR\r\n} from '../constants/actionTypes';\r\n\r\ntype TOrderState = {\r\n  data: TOrder ,  \r\n  numberOrd: number,\r\n  isFetching: boolean,\r\n  fetchingFailed: boolean,    \r\n  lastUpdated: number | null\r\n  error: string | null\r\n}\r\n\r\nexport const initialState: TOrderState = {\r\n  data: {} as TOrder,\r\n    numberOrd: 0, \r\n    isFetching: false,\r\n    fetchingFailed: false,\r\n    lastUpdated: null,\r\n    error: null\r\n  };\r\n  \r\nexport const orderReducer = (state = initialState, action: TOrderActions): TOrderState => {\r\n \r\n    switch (action.type) {\r\n      case GET_ORDER_REQUEST: {\r\n        return {\r\n          ...state,\r\n            numberOrd: 0,\r\n            fetchingFailed: false,  \r\n            isFetching: true\r\n        };\r\n      }\r\n      case GET_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                fetchingFailed: false,\r\n                data: action.payload,\r\n                numberOrd: action.payload.number,\r\n                //lastUpdated: Date.now(),\r\n                isFetching: false\r\n            };\r\n      }\r\n      case GET_ORDER_FAILED: {\r\n            return {\r\n                ...state,\r\n                fetchingFailed: true,\r\n                isFetching: false\r\n            };\r\n      }\r\n      case SET_ORDER_ERROR: {\r\n        return {\r\n            ...state,\r\n            fetchingFailed: true,\r\n            error: action.payload\r\n        };\r\n  }\r\n      \r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n  ","import type { TIngredient } from '../types/data';\r\nimport type { TViewedItemActions } from '../actions';\r\nimport {\r\n    SET_VIEW_ITEM,\r\n    RESET_VIEW_ITEM\r\n} from '../constants/actionTypes';\r\n\r\ntype TViewedItemState = {\r\n  data: TIngredient ;     \r\n  lastUpdated: number | null;\r\n  \r\n}\r\n\r\nexport const initialState: TViewedItemState = {\r\n  data: {} as TIngredient,\r\n    lastUpdated: null\r\n  };\r\n  \r\nexport const viewedItemReducer = (state = initialState, action: TViewedItemActions): TViewedItemState => {\r\n  \r\n    switch (action.type) {\r\n      \r\n      case SET_VIEW_ITEM: {\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                //lastUpdated: Date.now()\r\n            };\r\n      }\r\n      case RESET_VIEW_ITEM: {\r\n            return {\r\n                ...state,\r\n                data: initialState.data\r\n            };\r\n      }  \r\n      \r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };","import type { TSignData, TSignDataWPassword } from '../types/data';\r\nimport type { TSignActions } from '../actions';\r\nimport {\r\n  GET_AUTH_REQUEST,\r\n  GET_AUTH_SUCCESS,\r\n  GET_AUTH_FAILED,\r\n  SET_AUTH_ERROR,\r\n  GET_REGISTER_REQUEST,\r\n  GET_REGISTER_SUCCESS,\r\n  GET_REGISTER_FAILED,\r\n  SET_REGISTER_ERROR,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAILED,\r\n  SET_PROFILE_ERROR,\r\n  SET_PROFILE_CLEAR\r\n} from '../constants/actionTypes';\r\n\r\ntype TSignState = {\r\n  user: TSignDataWPassword ,  \r\n  isAuthorized: boolean,\r\n  isFetching: boolean,\r\n  fetchingFailed: boolean,    \r\n  lastUpdated: number | null\r\n  error: string | null\r\n}\r\n\r\nexport const initialState: TSignState = {\r\n  user: {} as TSignDataWPassword,\r\n  isAuthorized: false,\r\n  isFetching: false,\r\n  fetchingFailed: false,\r\n  lastUpdated: null,  \r\n  error: null\r\n};\r\n\r\nexport const signReduser = (state = initialState, action: TSignActions): TSignState => {\r\n  switch (action.type) {\r\n    case GET_AUTH_REQUEST:\r\n      return {\r\n        ...state,\r\n        fetchingFailed: false,  \r\n        isAuthorized: false,    \r\n        isFetching: true\r\n      };\r\n    case GET_AUTH_SUCCESS:\r\n      return {\r\n        ...state, \r\n        fetchingFailed: false,\r\n        isAuthorized: true,\r\n        user: action.payload,        \r\n        //lastUpdated: Date.now(),\r\n        isFetching: false\r\n      };\r\n    case GET_AUTH_FAILED:\r\n      return {\r\n        ...state, \r\n        fetchingFailed: true,\r\n        isAuthorized: false, \r\n        isFetching: false\r\n      };\r\n    case SET_AUTH_ERROR:\r\n      return {\r\n        ...state, \r\n        fetchingFailed: true,\r\n            error: action.payload\r\n      };\r\n    case GET_REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        fetchingFailed: false,  \r\n        isAuthorized: false,    \r\n        isFetching: true\r\n      };\r\n    case GET_REGISTER_SUCCESS:\r\n      return {\r\n        ...state, \r\n        fetchingFailed: false,\r\n        isAuthorized: true,\r\n        user: action.payload,        \r\n        //lastUpdated: Date.now(),\r\n        isFetching: false\r\n      };\r\n    case GET_REGISTER_FAILED:\r\n      return {\r\n        ...state,  \r\n        fetchingFailed: true,\r\n        isAuthorized: false, \r\n        isFetching: false\r\n      };\r\n    case SET_REGISTER_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchingFailed: true,\r\n            error: action.payload\r\n      };\r\n    case GET_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        fetchingFailed: false,            \r\n        isFetching: true\r\n      };\r\n    case GET_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchingFailed: false,\r\n        isAuthorized: true,\r\n        user: action.payload,        \r\n        //lastUpdated: Date.now(),\r\n        isFetching: false\r\n      };\r\n    case GET_PROFILE_FAILED:\r\n      return {\r\n        ...state, \r\n        fetchingFailed: true,\r\n        isAuthorized: false, \r\n        isFetching: false\r\n      };\r\n    case SET_PROFILE_ERROR:\r\n      return {\r\n        ...state,        \r\n      };\r\n    case SET_PROFILE_CLEAR:\r\n        return {\r\n          ...state, \r\n          user: initialState.user,\r\n          isAuthorized: false\r\n        };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};","import type { TOrder, TOrderWSAll } from '../types/data';\r\nimport type { TWsAllActions } from '../actions';\r\n\r\nimport {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n  } from \"../constants/actionTypes\";\r\n  \r\ntype TWsAllState = {\r\n    wsConnected: boolean;\r\n    data: TOrderWSAll;    \r\n    wsConnectionFailed: boolean;\r\n    error: string | null;\r\n  }\r\n\r\n  export const initialState: TWsAllState = {\r\n    wsConnected: false,\r\n    data: {} as TOrderWSAll,\r\n    error: null,\r\n    wsConnectionFailed: false\r\n  };\r\n  \r\n  \r\n  export const wsAllReducer = (state = initialState, action: TWsAllActions): TWsAllState => {\r\n    switch (action.type) {\r\n     \r\n        case WS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,          \r\n                wsConnected: true,\r\n                wsConnectionFailed: false\r\n            };  \r\n      \r\n        case WS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                wsConnected: false,\r\n                wsConnectionFailed: true\r\n            };\r\n  \r\n        case WS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                wsConnected: false,\r\n                wsConnectionFailed: false\r\n            };  \r\n      \r\n        case WS_GET_MESSAGE: \r\n        //console.log('WS_GET_MESSAGE',action.payload)    \r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import type { TOrder, TOrderWSAll } from '../types/data';\r\nimport type { TWsSignActions } from '../actions';\r\n\r\nimport {\r\n    WS_SIGN_CONNECTION_SUCCESS,\r\n    WS_SIGN_CONNECTION_ERROR,\r\n    WS_SIGN_CONNECTION_CLOSED,\r\n    WS_SIGN_GET_MESSAGE,\r\n  } from \"../constants/actionTypes\";\r\n  \r\n  type TWsSignState = {\r\n    wsConnected: boolean;\r\n    data: TOrderWSAll;    \r\n    wsConnectionFailed: boolean;\r\n    error: string | null;\r\n  }\r\n\r\n  export const initialState: TWsSignState = {\r\n    wsConnected: false,\r\n    data: {} as TOrderWSAll,\r\n    error: null,\r\n    wsConnectionFailed: false\r\n  };\r\n  \r\n  \r\n  export const wsSignReducer = (state = initialState, action: TWsSignActions): TWsSignState => {\r\n    switch (action.type) {\r\n     \r\n        case WS_SIGN_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,          \r\n                wsConnected: true,\r\n                wsConnectionFailed: false\r\n            };  \r\n      \r\n        case WS_SIGN_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                wsConnected: false,\r\n                wsConnectionFailed: true\r\n            };\r\n  \r\n        case WS_SIGN_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                wsConnected: false,\r\n                wsConnectionFailed: false\r\n            };  \r\n      \r\n        case WS_SIGN_GET_MESSAGE:            \r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import type { TOrder, TViewedOrder } from '../types/data';\r\nimport type { TViewedOrderActions } from '../actions';\r\n\r\nimport {\r\n    SET_VIEW_ORDER,\r\n  RESET_VIEW_ORDER,\r\n  GET_VIEW_ORDER_REQUEST,\r\n  GET_VIEW_ORDER_SUCCESS,\r\n  GET_VIEW_ORDER_FAILED,\r\n  SET_VIEW_ORDER_ERROR\r\n} from '../constants/actionTypes';\r\n\r\ntype TViewedOrderState = {\r\n  data: TViewedOrder;\r\n  isLoaded: boolean,\r\n  lastUpdated: number | null;\r\n  isFetching: boolean,\r\n  fetchingFailed: boolean,  \r\n  error: string | null\r\n}\r\n\r\nexport const initialState: TViewedOrderState = {\r\n  data: {} as TViewedOrder,\r\n  isLoaded: false,\r\n  lastUpdated: null,\r\n  isFetching: false,\r\n  fetchingFailed: false,  \r\n  error: null\r\n };\r\n  \r\nexport const viewedOrderReducer = (state = initialState, action: TViewedOrderActions): TViewedOrderState => {\r\n  \r\n    switch (action.type) {\r\n      \r\n      case SET_VIEW_ORDER: {\r\n        //console.log('SET_VIEW_ORDER ', action.payload)\r\n            return {\r\n              ...state,\r\n              data: action.payload,\r\n              isLoaded: true,\r\n              //lastUpdated: Date.now()\r\n            };\r\n      }\r\n      case RESET_VIEW_ORDER: {\r\n            return {\r\n                ...state,\r\n                data: initialState.data\r\n            };\r\n      }  \r\n      case GET_VIEW_ORDER_REQUEST: {\r\n        return {\r\n            ...state,\r\n            fetchingFailed: false,  \r\n            isFetching: true\r\n        };\r\n      }\r\n      case GET_VIEW_ORDER_SUCCESS: {\r\n            //console.log('GET_VIEW_ORDER_SUCCESS',action.payload)\r\n            return {\r\n                ...state,\r\n                fetchingFailed: false,\r\n                data: action.payload,\r\n                isLoaded: false,\r\n                //lastUpdated: Date.now(),\r\n                isFetching: false\r\n            };\r\n      }\r\n      case GET_VIEW_ORDER_FAILED: {\r\n            return {\r\n                ...state,\r\n                fetchingFailed: true,\r\n                isFetching: false\r\n            };\r\n      }\r\n      case SET_VIEW_ORDER_ERROR: {\r\n        return {\r\n            ...state,\r\n            fetchingFailed: true,\r\n            error: action.payload\r\n        };\r\n  }\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };","\r\nimport { combineReducers } from 'redux';\r\nimport { ingredientsReducer } from './ingredients';\r\nimport { constructorReducer } from './constructor';\r\nimport { orderReducer } from './order';\r\nimport { viewedItemReducer } from './viewedItem';\r\nimport { signReduser } from './sign';\r\nimport { wsAllReducer } from './wsAll';\r\nimport { wsSignReducer } from './wsSign';\r\nimport { viewedOrderReducer } from './viewedOrder'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    cart: constructorReducer,\r\n    ingredients: ingredientsReducer,  \r\n    order: orderReducer,\r\n    viewedItem: viewedItemReducer,\r\n    sign: signReduser,\r\n    wsAll: wsAllReducer,\r\n    wsSign: wsSignReducer,\r\n    viewedOrder: viewedOrderReducer\r\n});\r\n\r\nexport default rootReducer;","import type { TIngredient, TId } from '../types/data';\r\nimport {    \r\n    ADD_CONSTRUCTOR_INGREDIENT,\r\n    DELETE_CONSTRUCTOR_INGREDIENT,\r\n    RESET_CONSTRUCTOR,\r\n    GET_CONSTRUCTOR_INGREDIENT,\r\n    SWAP_CONSTRUCTOR_INGREDIENT\r\n} from '../constants/actionTypes';\r\n\r\n\r\n\r\nexport interface IAddConstructorIngredient {\r\n    readonly type: typeof ADD_CONSTRUCTOR_INGREDIENT;\r\n    readonly payload: TIngredient;\r\n};\r\n\r\nexport interface IDeleteConstructorIngredient {\r\n    readonly type: typeof DELETE_CONSTRUCTOR_INGREDIENT;\r\n    readonly payload: number;\r\n};\r\n\r\nexport interface IResetConstructor {\r\n    readonly type: typeof RESET_CONSTRUCTOR;\r\n};\r\n\r\nexport interface IGetConstructorIngredient {\r\n    readonly type: typeof GET_CONSTRUCTOR_INGREDIENT;\r\n    readonly payload: Array<TIngredient>;\r\n};\r\n\r\nexport interface ISwapConstructorIngredient {\r\n    readonly type: typeof SWAP_CONSTRUCTOR_INGREDIENT;\r\n    readonly payload: {\r\n        dragIndex: number;\r\n        hoverIndex: number;\r\n    }\r\n   \r\n};\r\n\r\nexport type TConstructorActions = \r\n  | ISwapConstructorIngredient\r\n  | IResetConstructor\r\n  | IDeleteConstructorIngredient\r\n  | IAddConstructorIngredient\r\n  | IGetConstructorIngredient\r\n    ;\r\n  \r\nexport const deleteConstructorIngredient = (id: number): IDeleteConstructorIngredient => ({\r\n        type: DELETE_CONSTRUCTOR_INGREDIENT,\r\n        payload:  id\r\n});\r\n      \r\nexport const resetConstructor = (): IResetConstructor => ({\r\n    type: RESET_CONSTRUCTOR\r\n});\r\n  \r\nexport const addConstructorIngredient = (payload: TIngredient): IAddConstructorIngredient => ({\r\n    type: ADD_CONSTRUCTOR_INGREDIENT,\r\n    payload    \r\n});\r\n\r\nexport const swapConstructorIngredient = (dragIndex: number, hoverIndex: number): ISwapConstructorIngredient => ({\r\n    type: SWAP_CONSTRUCTOR_INGREDIENT,\r\n    payload : { dragIndex, hoverIndex }   \r\n});","  import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_STOP,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE,\r\n} from \"../constants/actionTypes\";\r\nimport {   \r\n    wsAllConnectionError\r\n} from '../actions'; \r\nimport { AnyAction, MiddlewareAPI, Middleware } from \"redux\";\r\n\r\n\r\n  export const socketOrdersAllMiddleware = (wsUrl: string): Middleware => {\r\n    return (store: MiddlewareAPI) => {\r\n      let socket: WebSocket | null = null;\r\n  \r\n      return (next) => (action) => {\r\n        const { dispatch } = store;\r\n        const { type, payload } = action;\r\n  \r\n        if (type === WS_CONNECTION_START) {         \r\n          socket = new WebSocket(wsUrl);\r\n        }\r\n  \r\n        if (type === WS_CONNECTION_STOP) {          \r\n          socket.close(1000, \"Page closed by user\");\r\n        }\r\n          \r\n        if (socket) {\r\n            \r\n          socket.onopen = (event) => {\r\n              dispatch({\r\n                  type: WS_CONNECTION_SUCCESS,\r\n                  payload: event\r\n              });\r\n            };\r\n            \r\n          socket.onerror = (event) => {\r\n              dispatch({\r\n                  type: WS_CONNECTION_ERROR,\r\n                  payload: event\r\n              });\r\n          };\r\n          \r\n          socket.onmessage = (event) => {\r\n              const { data } = event;\r\n            if(data?.includes('ping')){\r\n                socket.send('pong');\r\n            }\r\n            const { success, message, orders, total, totalToday } = JSON.parse(data);\r\n            if (success) {\r\n                dispatch({\r\n                    type: WS_GET_MESSAGE,\r\n                    payload: {\r\n                        orders,\r\n                        total,\r\n                        totalToday\r\n                    },\r\n                });\r\n            } else {\r\n              message && dispatch( wsAllConnectionError(message) )\r\n            }\r\n          };\r\n          \r\n          socket.onclose = (event) => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED, payload: event });\r\n          };  \r\n          \r\n          if (type === WS_SEND_MESSAGE) {                        \r\n            socket.send(JSON.stringify(payload));\r\n          }\r\n  \r\n        }\r\n  \r\n        next(action);\r\n      };\r\n    };\r\n  };\r\n  \r\n  \r\n  \r\n  ","export type TId = string | number;\r\n\r\nexport enum EItemType {\r\n  'typeBun' = 'bun',\r\n  'typeSauce' = 'sauce',\r\n  'typeMain' = 'main',\r\n  'typeEmpty' = 'empty'\r\n} \r\n\r\nexport enum EOrderStatus {\r\n  'done'= \"Выполнен\",\r\n  'pending'= \"Готовиться\",\r\n  'created' = \"Создан\",\r\n  'cancel' = \"Отменен\"\r\n};\r\n\r\nexport type TIngredient = {\r\n    _id: TId;\r\n    name: string;\r\n    type: EItemType;\r\n    proteins: number;\r\n    fat: number;\r\n    carbohydrates: number;\r\n    calories: number;\r\n    price: number;\r\n    image: string;\r\n    image_mobile: string;\r\n    image_large: string;\r\n    __v: number;\r\n  };\r\n  \r\n\r\n\r\n  \r\n  export type TSortedIngredient = TIngredient & { index: number };\r\n  export type TGroupedIngredient = TIngredient & { count: number };\r\n  \r\n  export type TOrder = {\r\n    _id: TId;\r\n    ingredients: ReadonlyArray<TId>;\r\n    owner?: string | TOwner;\r\n    status: keyof typeof EOrderStatus;\r\n    name: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n      number: number;\r\n    price?:  number;\r\n    __v?: number;\r\n};\r\n\r\nexport type TViewedOrder = TOrder &\r\n  {\r\n  groupedIngredients: Array<TGroupedIngredient>;\r\n  ingredientsWDetails: Array<TIngredient>;\r\n  orderTotalPrice: number;\r\n  };\r\n  \r\nexport type TOrderWS = Omit<TOrder, 'owner' | '__v' | 'price'>;\r\n\r\nexport type TOrderWSAll = {\r\n    orders: ReadonlyArray<TOrderWS>;\r\n    total: number;\r\n    totalToday: number;\r\n}\r\n\r\nexport type TSignData = {\r\n    name: string ;\r\n    email: string ;\r\n  };  \r\nexport type TSignDataWPassword = TSignData & {\r\n    password?: string ;\r\n};\r\nexport type TSignDataForgoutPassword = Omit<TSignData, 'name'>;\r\nexport type TSignDataLogin = {\r\n  email: string;\r\n  password: string ;\r\n};  \r\nexport type TSignDataLogResetPassword = {\r\n  token: string;\r\n  password: string ;\r\n};  \r\nexport type TOwner = TSignData & {    \r\n    createdAt: string;\r\n    updatedAt: string;\r\n};\r\n  ","export enum EItemIcon  {\r\n    burgerIcon= \"burgerIcon\",\r\n    listIcon= \"listIcon\",\r\n    profileIcon= \"profileIcon\"\r\n}\r\n\r\nexport type IItem = {\r\n    id: string;\r\n    name: string;\r\n    href: string;\r\n    icon: EItemIcon;\r\n    exact: boolean;\r\n};","import type {\r\n  TSignData,\r\n  TSignDataWPassword,\r\n  TSignDataForgoutPassword,\r\n  TSignDataLogin,\r\n  TSignDataLogResetPassword,\r\n  TId\r\n} from '../types/data';\r\n\r\nimport { API_URL } from '../constants/constValue';\r\n//const API_URL = 'https://norma.nomoreparties.space/api';\r\nconst headers = {\r\n  post: { 'Content-Type': 'application/json' },\r\n  get: {}\r\n};\r\n\r\nexport const apiGetIngredientsRequest = async () => {\r\n    return await fetch(`${API_URL}/ingredients`)    \r\n    ;\r\n};\r\n  \r\nexport const checkoutRequest = async (idOrderIngredients: Array<TId>, token: string) => {\r\n  //console.log(\"fetch post checkoutRequest\");\r\n  return await fetch(`${API_URL}/orders`, {\r\n    method: 'POST',\r\n    headers: { ...headers.post, authorization: `Bearer ${token}`},\r\n    body: JSON.stringify({ ingredients: idOrderIngredients })\r\n  })    \r\n  ;\r\n};\r\n\r\nexport const postRegisterRequest = async (data: TSignDataWPassword) => {\r\n  //console.log(\"fetch post registerRequest\");\r\n  return await fetch(`${API_URL}/auth/register`, {\r\n    method: 'POST',\r\n    headers: headers.post,\r\n    body: JSON.stringify({ ...data })\r\n  })    \r\n  ;\r\n};\r\n\r\nexport const postLoginRequest = async (data: TSignDataLogin) => {\r\n  //console.log(\"fetch post loginRequest\");\r\n  return await fetch(`${API_URL}/auth/login`, {\r\n    method: 'POST',\r\n    headers: headers.post,\r\n    body: JSON.stringify({ ...data })\r\n  })    \r\n  ;\r\n};\r\n\r\nexport const postRefreshTokenRequest = async (token: string) => {\r\n  //console.log(\"fetch post registerRequest\");\r\n  return await fetch(`${API_URL}/auth/token`, {\r\n    method: 'POST',\r\n    headers: headers.post,\r\n    body: JSON.stringify({ token })\r\n  })    \r\n  ;\r\n};\r\n\r\n\r\nexport const postLogoutRequest = async (token: string) => {\r\n  //console.log(\"fetch post registerRequest\");\r\n  return await fetch(`${API_URL}/auth/logout`, {\r\n    method: 'POST',\r\n    headers: headers.post,\r\n    body: JSON.stringify({ token })\r\n  })    \r\n  ;\r\n};\r\n\r\nexport const patchProfileRequest = async (data: TSignDataWPassword, token: string) => {\r\n  //console.log(\"fetch patch profileRequest\");\r\n  return await fetch(`${API_URL}/auth/user`, {\r\n    method: 'PATCH',\r\n    headers: { ...headers.post, authorization: `Bearer ${token}`},\r\n    body: JSON.stringify({ ...data })\r\n  })    \r\n  ;\r\n};\r\n\r\nexport const apiGetProfileRequest = async (token: string) => {\r\n  //console.log(\"fetch get profileRequest\");\r\n  return await fetch(`${API_URL}/auth/user`, {\r\n    method: 'GET',\r\n    headers: { ...headers.get, authorization: `Bearer ${token}`}\r\n    \r\n  })    \r\n  ;\r\n};\r\n\r\nexport const postForgotPasswordRequest = async (data: TSignDataForgoutPassword) => {\r\n  //console.log(\"fetch post forgotPasswordRequest\");\r\n  return await fetch(`${API_URL}/password-reset`, {\r\n    method: 'POST',\r\n    headers: { ...headers.post},\r\n    body: JSON.stringify({ ...data })\r\n  })    \r\n  ;\r\n};\r\n\r\nexport const postResetPasswordRequest = async (data: TSignDataLogResetPassword) => {\r\n  //console.log(\"fetch post resetPasswordRequest\");\r\n  return await fetch(`${API_URL}/password-reset/reset`, {\r\n    method: 'POST',\r\n    headers: { ...headers.post},\r\n    body: JSON.stringify({ ...data })\r\n  })    \r\n  ;\r\n};\r\n\r\nexport const getOrderDetailsRequest = async (id: TId) => {\r\n  //console.log(\"fetch get OrderDetailsRequest\");\r\n  return await fetch(`${API_URL}/orders/${id}`, {\r\n    method: 'GET',\r\n    headers: { ...headers.get}\r\n    \r\n  })    \r\n  ;\r\n};\r\n\r\n\r\n\r\n\r\n// TODO : { 'Content-Type': 'application/json' }\r\n\r\n// TODO  ITEMS_API_URL = 'https://norma.nomoreparties.space/api/ingredients';\r\n// TODO  ORDER_API_URL = 'https://norma.nomoreparties.space/api/orders';\r\n// TODO  FORGOT_PASSWORD_API_URL = 'https://norma.nomoreparties.space/api/password-reset';\r\n// TODO  RESET_PASSWORD_API_URL = 'https://norma.nomoreparties.space/api/password-reset/reset';\r\n// TODO  REGISTER_API_URL = 'https://norma.nomoreparties.space/api/auth/register';\r\n// TODO  LOGIN_API_URL = 'https://norma.nomoreparties.space/api/auth/login';\r\n// TODO  LOGOUT_API_URL = 'https://norma.nomoreparties.space/api/auth/logout';\r\n// TODO  TOKEN_API_URL = 'https://norma.nomoreparties.space/api/auth/token';\r\n// TODO  USER_API_URL = 'https://norma.nomoreparties.space/api/auth/user';  ","// TODO mosk data\r\nconst dataEmpty = [\r\n  {\r\n    \"_id\":\"60666c42cc7b410027a1a9b2\",\r\n    \"name\":\"Собери здесь свой бургер\",\r\n    \"type\": \"empty\",\r\n    \"proteins\": 0,\r\n    \"fat\": 0,\r\n    \"carbohydrates\": 0,\r\n    \"calories\": 0,\r\n    \"price\": 0,\r\n    \"image\":\"https://raw.githubusercontent.com/AndreSmrnv/YaP_react-burger/sprint-4/step-1/src/images/icon-burger.svg\",\r\n    \"image_mobile\":\"https://raw.githubusercontent.com/AndreSmrnv/YaP_react-burger/sprint-4/step-1/src/images/icon-burger.svg\",\r\n    \"image_large\":\"https://raw.githubusercontent.com/AndreSmrnv/YaP_react-burger/sprint-4/step-1/src/images/icon-burger.svg\",\r\n    \"__v\":0\r\n  }\r\n];\r\n\r\n// TODO Экспорт данных для использования в компонентах\r\nexport default dataEmpty;\r\n","import type { TIngredient } from '../types/data';\r\nimport {  \r\n  GET_INGREDIENTS_REQUEST,\r\n  GET_INGREDIENTS_SUCCESS,\r\n  GET_INGREDIENTS_FAILED\r\n} from '../constants/actionTypes';\r\nimport { AppDispatch, AppThunk } from \"../types/redux\";\r\nimport { addConstructorIngredient, TConstructorActions } from './index';\r\nimport { apiGetIngredientsRequest } from '../api';\r\nimport  dataEmpty from '../../utils/mocks/data-mock-empty';\r\n\r\nexport interface IGetIngredientsRequest {\r\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n};\r\nexport interface IGetIngredientsSuccess {\r\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n  readonly payload: Array<TIngredient>;\r\n};\r\nexport interface IGetIngredientsFailed {\r\n  readonly type: typeof GET_INGREDIENTS_FAILED;\r\n};\r\n\r\n  \r\n  export type TIngredientsActions = \r\n  | IGetIngredientsFailed\r\n  | IGetIngredientsSuccess\r\n  | IGetIngredientsRequest\r\n  ;\r\n\r\nexport const getIngredientsRequest = (): IGetIngredientsRequest => ({\r\n    type: GET_INGREDIENTS_REQUEST\r\n});\r\n\r\nexport const getIngredientsSuccess = (data: Array<TIngredient>): IGetIngredientsSuccess => ({\r\n  type: GET_INGREDIENTS_SUCCESS,\r\n  payload:  data\r\n});\r\n\r\nexport const getIngredientsFailed = (): IGetIngredientsFailed => ({\r\n  type: GET_INGREDIENTS_FAILED\r\n});\r\n\r\nexport const getIngredients: AppThunk = () => {\r\n    return function(dispatch: AppDispatch) {\r\n      dispatch(\r\n        getIngredientsRequest()\r\n      );\r\n      apiGetIngredientsRequest()\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n            //console.log(result);\r\n          \r\n            dispatch(\r\n              getIngredientsSuccess(result.data)              \r\n            );\r\n            \r\n            dispatch(\r\n              addConstructorIngredient(\r\n                dataEmpty.find(item => item.type === 'empty') as TIngredient\r\n              )\r\n            );\r\n\r\n          \r\n        })\r\n        .catch(e => {\r\n              console.log(e);\r\n          dispatch(\r\n            getIngredientsFailed()            \r\n          );\r\n            }) ;\r\n    };\r\n  }","import Cookies from \"js-cookie\";\r\nimport { TSignActions } from \"../actions\";\r\nimport { postRefreshTokenRequest } from '../api';\r\nimport {\r\n  REFRESH_TOKEN,\r\n  ACCESS_TOKEN\r\n} from '../constants/constValue';\r\nimport { AppDispatch, AppThunk } from \"../types/redux\";\r\ninterface IToken {\r\n  accessToken: string,\r\n  refreshToken: string\r\n};\r\nconst setToken = ({ accessToken, refreshToken }:IToken) => {\r\n  const expTime = new Date(new Date().getTime() + 20 * 60 * 1000);\r\n  const bearerToken = accessToken.includes('Bearer') ? accessToken.split(' ')[1] : accessToken;\r\n  Cookies.set(\r\n    ACCESS_TOKEN,\r\n    bearerToken,\r\n   // { expires: expTime }\r\n  );\r\n    localStorage.setItem(REFRESH_TOKEN, refreshToken);\r\n};\r\n  \r\nconst getToken = () => Cookies.get(ACCESS_TOKEN);\r\n  \r\nconst getRefreshToken = () => localStorage.getItem(REFRESH_TOKEN);\r\n\r\nconst clearToken = () => {\r\n    Cookies.remove(ACCESS_TOKEN);\r\n    localStorage.removeItem(REFRESH_TOKEN);\r\n  };\r\n  \r\nconst refreshToken = (afterRefresh: TSignActions) => (dispatch: AppDispatch) => {\r\n      postRefreshTokenRequest(localStorage.getItem(REFRESH_TOKEN) as string)\r\n      .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n                //console.log(result); \r\n            setToken({ accessToken: result.accessToken, refreshToken: result.refreshToken });\r\n            dispatch(afterRefresh);\r\n        })\r\n        .catch(e => {\r\n              console.log(e);              \r\n            }) ;\r\n  };\r\n\r\n  \r\nexport {\r\n    setToken,\r\n    refreshToken,\r\n    clearToken,\r\n  getToken,\r\n  getRefreshToken\r\n};\r\n\r\n","import type { TOrder, TIngredient, TId } from '../types/data';\r\nimport {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    SET_ORDER_ERROR\r\n} from '../constants/actionTypes';\r\nimport { addConstructorIngredient, resetConstructor, TConstructorActions } from './index';\r\nimport { checkoutRequest } from '../api';\r\nimport { \r\n  getToken\r\n} from '../token';\r\nimport { AppDispatch, AppThunk } from \"../types/redux\";\r\nimport  dataEmpty from '../../utils/mocks/data-mock-empty';\r\n\r\nexport interface IGetOrderRequest {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n};\r\nexport interface IGetOrderSuccess {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  readonly payload: TOrder;\r\n};\r\nexport interface IGetOrderFailed {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n};\r\nexport interface ISetOrderError {\r\n  readonly type: typeof SET_ORDER_ERROR;\r\n  readonly payload: string;\r\n};\r\n  \r\nexport type TOrderActions = \r\n  | IGetOrderRequest\r\n  | IGetOrderSuccess\r\n    | IGetOrderFailed\r\n    | ISetOrderError\r\n  ;\r\n\r\n  export const getOrderRequest = (): TOrderActions => ({\r\n    type: GET_ORDER_REQUEST\r\n});\r\nexport const getOrderSuccess = (data: TOrder): TOrderActions => ({\r\n  type: GET_ORDER_SUCCESS,\r\n  payload:  data\r\n});\r\nexport const getOrderFailed = (): TOrderActions => ({\r\n  type: GET_ORDER_FAILED\r\n});\r\nexport const setOrderError = (data: string): TOrderActions => ({\r\n  type: SET_ORDER_ERROR,\r\n  payload:  data\r\n});  \r\n\r\nexport const getOrderNumber: AppThunk = (data : Array<TId>) => {\r\n    return function(dispatch: AppDispatch ) {\r\n   \r\n      dispatch(\r\n        getOrderRequest()        \r\n      );\r\n      const accessToken = getToken() as string;  \r\n      checkoutRequest(data,accessToken)\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n            //console.log(result);\r\n          \r\n            dispatch(\r\n              getOrderSuccess(result.order)             \r\n            );\r\n\r\n            dispatch(\r\n              resetConstructor()             \r\n            );\r\n            dispatch(\r\n              addConstructorIngredient(\r\n                dataEmpty.find(item => item.type === 'empty') as TIngredient\r\n              )\r\n            );\r\n        })\r\n        .catch(e => {\r\n              //console.log(e);\r\n              dispatch(\r\n                getOrderFailed()                \r\n              );\r\n            }) ;\r\n    };\r\n}\r\n  \r\n","\r\nimport type { TSignData, TSignDataWPassword, TSignDataForgoutPassword, TSignDataLogin, TSignDataLogResetPassword } from '../types/data';\r\nimport {\r\n    GET_AUTH_REQUEST,\r\n    GET_AUTH_SUCCESS,\r\n    GET_AUTH_FAILED,\r\n    SET_AUTH_ERROR,\r\n    GET_REGISTER_REQUEST,\r\n    GET_REGISTER_SUCCESS,\r\n    GET_REGISTER_FAILED,\r\n    SET_REGISTER_ERROR,\r\n    GET_PROFILE_REQUEST,\r\n    GET_PROFILE_SUCCESS,\r\n    GET_PROFILE_FAILED,\r\n    SET_PROFILE_ERROR,\r\n    SET_PROFILE_CLEAR\r\n} from '../constants/actionTypes';\r\nimport {\r\n  setToken,\r\n  refreshToken,\r\n  clearToken,\r\n  getToken\r\n} from '../token';\r\n  \r\nimport {\r\n    postRegisterRequest,\r\n    postLoginRequest,\r\n    postLogoutRequest,\r\n    patchProfileRequest,\r\n    apiGetProfileRequest,\r\n    postForgotPasswordRequest,\r\n    postResetPasswordRequest\r\n} from '../api';\r\nimport { History } from 'history';\r\nimport { AppDispatch, AppThunk } from \"../types/redux\";\r\n\r\nexport interface IGetAuthRequest {\r\n  readonly type: typeof GET_AUTH_REQUEST;\r\n};\r\nexport interface IGetAuthSuccess {\r\n  readonly type: typeof GET_AUTH_SUCCESS;\r\n  readonly payload: TSignData;\r\n};\r\nexport interface IGetAuthFailed {\r\n  readonly type: typeof GET_AUTH_FAILED;\r\n};\r\nexport interface ISetAuthError {\r\n  readonly type: typeof SET_AUTH_ERROR;\r\n  readonly payload: string;\r\n};\r\n\r\nexport interface IGetRegisterRequest {\r\n  readonly type: typeof GET_REGISTER_REQUEST;\r\n};\r\nexport interface IGetRegisterSuccess {\r\n  readonly type: typeof GET_REGISTER_SUCCESS;\r\n  readonly payload: TSignDataWPassword;\r\n};\r\nexport interface IGetRegisterFailed {\r\n  readonly type: typeof GET_REGISTER_FAILED;\r\n};\r\nexport interface ISetRegisterError {\r\n  readonly type: typeof SET_REGISTER_ERROR;\r\n  readonly payload: string;\r\n};\r\n\r\nexport interface IGetProfileRequest {\r\n  readonly type: typeof GET_PROFILE_REQUEST;\r\n};\r\nexport interface IGetProfileSuccess {\r\n  readonly type: typeof GET_PROFILE_SUCCESS;\r\n  readonly payload: TSignDataWPassword;\r\n};\r\nexport interface IGetProfileFailed {\r\n  readonly type: typeof GET_PROFILE_FAILED;\r\n};\r\nexport interface ISetProfileError {\r\n  readonly type: typeof SET_PROFILE_ERROR;\r\n  readonly payload: string;\r\n};\r\nexport interface IGetProfileClear {\r\n  readonly type: typeof SET_PROFILE_CLEAR;\r\n};\r\n\r\n\r\nexport type TSignActions = \r\n  | IGetProfileClear\r\n  | ISetProfileError\r\n  | IGetProfileFailed\r\n  | IGetProfileSuccess\r\n  | IGetProfileRequest\r\n  | ISetRegisterError\r\n  | IGetRegisterFailed\r\n  | IGetRegisterSuccess\r\n  | IGetRegisterRequest\r\n  | ISetAuthError\r\n  | IGetAuthFailed\r\n  | IGetAuthSuccess\r\n  | IGetAuthRequest   \r\n  ;\r\n\r\nexport const getAuthRequest = (): TSignActions => ({\r\n  type: GET_AUTH_REQUEST\r\n});\r\nexport const getAuthSuccess = (data: TSignData): TSignActions => ({\r\n  type: GET_AUTH_SUCCESS,\r\n  payload:  data\r\n});  \r\nexport const getAuthFailed = (): TSignActions => ({\r\n  type: GET_AUTH_FAILED\r\n});\r\nexport const setAuthError = (data: string): TSignActions => ({\r\n  type: SET_AUTH_ERROR,\r\n  payload:  data\r\n}); \r\n\r\nexport const getRegisterRequest = (): TSignActions => ({\r\n  type: GET_REGISTER_REQUEST\r\n});\r\nexport const getRegisterSuccess = (data: TSignDataWPassword): TSignActions => ({\r\n  type: GET_REGISTER_SUCCESS,\r\n  payload:  data\r\n});  \r\nexport const getRegisterFailed = (): TSignActions => ({\r\n  type: GET_REGISTER_FAILED\r\n});\r\nexport const setRegisterError = (data: string): TSignActions => ({\r\n  type: SET_REGISTER_ERROR,\r\n  payload:  data\r\n});\r\n\r\nexport const getProfileRequest = (): TSignActions => ({\r\n  type: GET_PROFILE_REQUEST\r\n});\r\nexport const getProfileSuccess = (data: TSignDataWPassword): TSignActions => ({\r\n  type: GET_PROFILE_SUCCESS,\r\n  payload:  data\r\n});  \r\nexport const getProfileFailed = (): TSignActions => ({\r\n  type: GET_PROFILE_FAILED\r\n});\r\nexport const setProfileError = (data: string): TSignActions => ({\r\n  type: SET_PROFILE_ERROR,\r\n  payload:  data\r\n});\r\nexport const getProfileClear = (): TSignActions => ({\r\n  type: SET_PROFILE_CLEAR\r\n});\r\n\r\nconst getRegister: AppThunk = (data: TSignDataWPassword) => {\r\n    //console.log('getRegister', data);\r\n    return function(dispatch: AppDispatch) {\r\n   \r\n      dispatch(\r\n        getRegisterRequest()\r\n        \r\n      );\r\n        \r\n      postRegisterRequest(data)\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n                console.log(result); \r\n                setToken({ accessToken: result.accessToken, refreshToken: result.refreshToken });    \r\n            dispatch(\r\n              getRegisterSuccess( result.user )\r\n             \r\n            );\r\n                \r\n        })\r\n        .catch(e => {\r\n              console.log(e);\r\n          dispatch(\r\n            getRegisterFailed()\r\n            \r\n          );\r\n            }) ;\r\n    };\r\n}\r\n\r\nconst getLogin: AppThunk = (data: TSignDataLogin) => {\r\n    //console.log('getLogin', data);\r\n    return function(dispatch: AppDispatch) {\r\n   \r\n      dispatch(\r\n        getAuthRequest()\r\n        \r\n      );\r\n        \r\n      postLoginRequest(data)\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n                //console.log(result); \r\n                setToken({ accessToken: result.accessToken, refreshToken: result.refreshToken });    \r\n            dispatch(\r\n              getAuthSuccess(result.user)\r\n              \r\n            );\r\n                \r\n        })\r\n        .catch(e => {\r\n              console.log(e);\r\n          dispatch(\r\n            getAuthFailed()\r\n            \r\n          );\r\n            }) ;\r\n    };\r\n}\r\n\r\nconst getLogout: AppThunk = (token: string) => {\r\n    //console.log('getLogout', token);\r\n    return function(dispatch: AppDispatch) {\r\n   \r\n      dispatch(\r\n        getAuthRequest()\r\n        \r\n      );\r\n        \r\n      postLogoutRequest(token)\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n                //console.log(result); \r\n                clearToken();    \r\n            dispatch(\r\n              getProfileClear()\r\n              \r\n            );\r\n                \r\n        })\r\n        .catch(e => {\r\n              console.log(e);\r\n          dispatch(\r\n            getAuthFailed()\r\n           \r\n          );\r\n            }) ;\r\n    };\r\n}\r\n\r\nconst updateProfile: AppThunk = (data: TSignDataWPassword) => {\r\n    //console.log('updateProfile', data);\r\n    return function(dispatch: AppDispatch) {\r\n   \r\n      dispatch(\r\n        getProfileRequest()\r\n        \r\n      );\r\n        \r\n      const accessToken = getToken() as string;  \r\n      patchProfileRequest(data, accessToken)\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n                console.log(result); \r\n                if (!result.success) throw result;   \r\n            dispatch(\r\n              getProfileSuccess(result.user)\r\n              \r\n            );\r\n                \r\n        })\r\n        .catch(e => {\r\n          console.log(e);//\r\n          if (e.message === 'jwt expired') {\r\n            // dispatch(\r\n            //   refreshToken( getProfile() )\r\n            //   )\r\n          }\r\n          dispatch(\r\n            getProfileFailed()\r\n            \r\n          );\r\n            }) ;\r\n    };\r\n}\r\n\r\nconst getProfile: AppThunk = () => {\r\n    //console.log('getProfile');\r\n    return function(dispatch: AppDispatch) {\r\n   \r\n      dispatch(\r\n        getProfileRequest()\r\n        \r\n      );\r\n        \r\n      const accessToken = getToken() as string;  \r\n      apiGetProfileRequest(accessToken)\r\n        .then(response => response.json()          \r\n         )        \r\n        .then(          \r\n          result => {\r\n                //console.log(result); \r\n            if (!result.success) throw result;\r\n            dispatch(\r\n              getProfileSuccess(result.user)\r\n              \r\n            );\r\n                \r\n        })\r\n        .catch(res => {\r\n          //console.log(res);\r\n          \r\n          if (res.message === 'jwt expired') {\r\n            // dispatch(\r\n            //   refreshToken( getProfile( ) )\r\n            //   )\r\n          }\r\n          dispatch(\r\n            getProfileFailed()\r\n           \r\n          );\r\n            }) ;\r\n    };\r\n}\r\n\r\n\r\n\r\nconst getForgotPassword: AppThunk = (data: TSignDataForgoutPassword, history : History) => {\r\n    //console.log('getForgotPassword');\r\n    return function() {\r\n   \r\n     \r\n      postForgotPasswordRequest(data)\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n                //console.log(result); \r\n                history.push({\r\n                    pathname: \"/reset-password\",\r\n                    state: { resetPassword: true },\r\n                  });\r\n                 \r\n                \r\n                \r\n        })\r\n        .catch(e => {\r\n              console.log(e);\r\n              \r\n            }) ;\r\n    };\r\n}\r\n\r\nconst getResetPassword: AppThunk = (data: TSignDataLogResetPassword, history : History) => {\r\n    //console.log('getResetPassword');\r\n    return function() {\r\n   \r\n     \r\n      postResetPasswordRequest(data)\r\n        .then(response => (response.ok)\r\n           ? response.json()\r\n           : Promise.reject(`api err: ${response.status}`)\r\n         )        \r\n        .then(          \r\n          result => {\r\n                console.log(result); \r\n                history.push({\r\n                    pathname: \"/login\",\r\n                    state: { resetPassword: true },\r\n                  });\r\n                 \r\n                \r\n                \r\n        })\r\n        .catch(e => {\r\n              console.log(e);\r\n              \r\n            }) ;\r\n    };\r\n}\r\n\r\n\r\n export {\r\n    getRegister,\r\n    getLogin,\r\n    getLogout,\r\n    updateProfile,\r\n    getProfile,\r\n    getForgotPassword,\r\n    getResetPassword\r\n };","import type { TId, TOrder,TViewedOrder } from '../types/data';\r\nimport {\r\n    SET_VIEW_ORDER,\r\n    RESET_VIEW_ORDER,\r\n    GET_VIEW_ORDER_REQUEST,\r\n    GET_VIEW_ORDER_SUCCESS,\r\n    GET_VIEW_ORDER_FAILED,\r\n    SET_VIEW_ORDER_ERROR\r\n} from '../constants/actionTypes';\r\nimport { AppDispatch, AppThunk } from \"../types/redux\";\r\n\r\nimport { getOrderDetailsRequest } from '../api';\r\n\r\nexport interface ISetViewOrder {\r\n  readonly type: typeof SET_VIEW_ORDER;\r\n  readonly payload: TViewedOrder;\r\n};\r\nexport interface IResetViewOrder {\r\n  readonly type: typeof RESET_VIEW_ORDER;\r\n};  \r\n  \r\nexport interface IGetViewOrderRequest {\r\n  readonly type: typeof GET_VIEW_ORDER_REQUEST;\r\n};\r\nexport interface IGetViewOrderSuccess {\r\n  readonly type: typeof GET_VIEW_ORDER_SUCCESS;\r\n  readonly payload: TViewedOrder;\r\n};\r\nexport interface IGetViewOrderFailed {\r\n  readonly type: typeof GET_VIEW_ORDER_FAILED;\r\n};\r\nexport interface ISetViewOrderError {\r\n  readonly type: typeof SET_VIEW_ORDER_ERROR;\r\n  readonly payload: string;\r\n};\r\n\r\nexport type TViewedOrderActions = \r\n  | IGetViewOrderFailed\r\n  | IGetViewOrderSuccess\r\n  | IGetViewOrderRequest\r\n  | IResetViewOrder\r\n  | ISetViewOrder\r\n  | ISetViewOrderError\r\n;\r\n\r\nexport const setViewOrder = (data: TViewedOrder): TViewedOrderActions => ({\r\n  type: SET_VIEW_ORDER,\r\n  payload:  data\r\n  });\r\nexport const resetViewOrder = (): TViewedOrderActions => ({\r\n  type: RESET_VIEW_ORDER\r\n});\r\n\r\nexport const getViewOrderRequest = (): TViewedOrderActions => ({\r\n  type: GET_VIEW_ORDER_REQUEST\r\n});\r\nexport const getViewOrderSuccess = (data: TViewedOrder): TViewedOrderActions => ({\r\n  type: GET_VIEW_ORDER_SUCCESS,\r\n  payload:  data\r\n  });\r\nexport const getViewOrderFailed = (): TViewedOrderActions => ({\r\n  type: GET_VIEW_ORDER_FAILED\r\n});\r\nexport const setViewOrderError = (data: string): TViewedOrderActions => ({\r\n  type: SET_VIEW_ORDER_ERROR,\r\n  payload:  data\r\n  });\r\n\r\n\r\nconst getOrderDetails: AppThunk = (id: TId) => {\r\n  return function (dispatch : AppDispatch) {\r\n    //const getOrderDetails = (id) => (dispatch) => {\r\n    //console.log('getOrderDetails0')\r\n    dispatch(\r\n      getViewOrderRequest()\r\n      \r\n    );\r\n    getOrderDetailsRequest(id)\r\n      .then(response => response.json()\r\n      )\r\n      .then(result => {\r\n        //console.log('getOrderDetails result', result);\r\n        if (!result.success) throw result;\r\n        dispatch(\r\n          getViewOrderSuccess (result.orders[0])\r\n         \r\n        );\r\n      })\r\n      .catch(e => {\r\n        // console.log(e);\r\n        dispatch(\r\n          getViewOrderFailed()          \r\n        );\r\n        // dispatch({\r\n        //   type: SET_VIEW_ORDER_ERROR ,\r\n        //   payload: e.message\r\n        // });\r\n           \r\n              \r\n      });\r\n    //console.log('getOrderDetails2')\r\n  }\r\n};\r\n  \r\n\r\nexport {\r\n  // setViewOrder,\r\n  //   resetViewOrder,\r\n    getOrderDetails\r\n};","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport  rootReducer from '../reducers';\r\nimport { socketOrdersAllMiddleware, socketOrdersSignMiddleware } from \"../middleware\";\r\nimport { WS_URL, WS_SIGN_URL } from '../constants/constValue';\r\n\r\nconst composeEnhancers = \r\n  ( typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ )\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(\r\n  thunk,\r\n  socketOrdersAllMiddleware(WS_URL),\r\n  socketOrdersSignMiddleware(WS_SIGN_URL)\r\n));\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import type { TOrder, TOrderWSAll } from '../types/data';\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_STOP\r\n} from '../constants/actionTypes';\r\n\r\n\r\nexport interface IWsConnectionSuccess {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n};\r\nexport interface IWsConnectionError {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n  readonly payload: string;\r\n};\r\nexport interface IWsConnectionClosed {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n};\r\nexport interface IWsGetMessage {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: TOrderWSAll;\r\n};\r\nexport interface IWsConnectionStart {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n};\r\nexport interface IWsConnectionStop {\r\n  readonly type: typeof WS_CONNECTION_STOP;\r\n};\r\n\r\nexport type TWsAllActions = \r\n  | IWsConnectionSuccess\r\n  | IWsConnectionError\r\n  | IWsConnectionClosed\r\n  | IWsGetMessage\r\n  | IWsConnectionStart\r\n  | IWsConnectionStop\r\n;\r\n\r\nconst wsAllInit = (): TWsAllActions => (\r\n  {\r\n    type: WS_CONNECTION_START\r\n  }\r\n);\r\n\r\nconst wsAllClose = (): TWsAllActions  => (\r\n  {\r\n    type: WS_CONNECTION_STOP\r\n  }\r\n);\r\n\r\nconst wsAllConnectionSuccess = (): TWsAllActions => (\r\n  {\r\n    type: WS_CONNECTION_SUCCESS\r\n  }\r\n);\r\n\r\nconst wsAllConnectionError = (error: string): TWsAllActions => (\r\n  {\r\n    type: WS_CONNECTION_ERROR,\r\n    payload: error\r\n  }\r\n);\r\n\r\nconst wsAllConnectionClosed = (): TWsAllActions => (\r\n  {\r\n    type: WS_CONNECTION_CLOSED\r\n  }\r\n);\r\n\r\nconst wsAllGetMessage = (data: TOrderWSAll): TWsAllActions => (\r\n  {\r\n    type: WS_GET_MESSAGE,\r\n    payload: data\r\n  }\r\n);\r\n\r\nexport {\r\n  wsAllConnectionSuccess,\r\n  wsAllConnectionError,\r\n  wsAllConnectionClosed,\r\n  wsAllGetMessage,\r\n  wsAllInit,\r\n  wsAllClose\r\n};","import {\r\n    WS_SIGN_CONNECTION_START,\r\n    WS_SIGN_CONNECTION_SUCCESS,\r\n    WS_SIGN_CONNECTION_ERROR,\r\n    WS_SIGN_CONNECTION_CLOSED,\r\n    WS_SIGN_CONNECTION_STOP,\r\n    WS_SIGN_GET_MESSAGE,\r\n    WS_SIGN_SEND_MESSAGE,\r\n} from \"../constants/actionTypes\";\r\nimport {    \r\n    refreshToken,    \r\n    getToken,\r\n    wsSignConnectionError,\r\n    wsSignInit\r\n} from '../actions';\r\nimport { AnyAction, MiddlewareAPI, Middleware } from \"redux\";  \r\n  \r\n  export const socketOrdersSignMiddleware = (wsUrl: string): Middleware => {\r\n    return (store: MiddlewareAPI) => {\r\n      let socket: WebSocket | null = null;\r\n  \r\n      return (next) => (action) => {\r\n        const { dispatch } = store;\r\n        const { type, payload } = action;\r\n        const accessToken = getToken();\r\n          \r\n        if (type === WS_SIGN_CONNECTION_START) {         \r\n          socket = new WebSocket(`${wsUrl}?token=${accessToken}`);\r\n        }\r\n  \r\n        if (type === WS_SIGN_CONNECTION_STOP) {          \r\n          socket.close(1000, \"Page closed by user\");\r\n        }\r\n          \r\n        if (socket) {\r\n            \r\n          socket.onopen = (event) => {\r\n              dispatch({\r\n                  type: WS_SIGN_CONNECTION_SUCCESS,\r\n                  payload: event\r\n              });\r\n            };\r\n            \r\n          socket.onerror = (event) => {\r\n              dispatch({\r\n                  type: WS_SIGN_CONNECTION_ERROR,\r\n                  payload: event\r\n              });\r\n          };\r\n          \r\n          socket.onmessage = (event) => {\r\n              const { data } = event;\r\n              if(data?.includes('ping')){\r\n                socket.send('pong');\r\n              }\r\n              const { success, message, orders, total, totalToday } = JSON.parse(data);\r\n              if (success) {\r\n                  dispatch({\r\n                      type: WS_SIGN_GET_MESSAGE,\r\n                      payload: {\r\n                          orders,\r\n                          total,\r\n                          totalToday\r\n                      },\r\n                  });\r\n              // } else if (message?.includes(\"Invalid or missing token\")) {\r\n              //     refreshToken(wsSignInit())\r\n                  \r\n              } else {\r\n                message && dispatch( wsSignConnectionError(message) )\r\n              }\r\n          };\r\n          \r\n          socket.onclose = (event) => {\r\n            dispatch({ type: WS_SIGN_CONNECTION_CLOSED, payload: event });\r\n          };  \r\n          \r\n          if (type === WS_SIGN_SEND_MESSAGE) {                        \r\n            socket.send(JSON.stringify(payload));\r\n          }\r\n  \r\n        }\r\n  \r\n        next(action);\r\n      };\r\n    };\r\n  };","import type { TOrder, TOrderWSAll } from '../types/data';\r\nimport {\r\n  WS_SIGN_CONNECTION_START,\r\n  WS_SIGN_CONNECTION_SUCCESS,\r\n  WS_SIGN_CONNECTION_ERROR,\r\n  WS_SIGN_CONNECTION_CLOSED,\r\n  WS_SIGN_GET_MESSAGE,\r\n  WS_SIGN_CONNECTION_STOP\r\n} from '../constants/actionTypes';\r\n\r\nexport interface IWsSignConnectionSuccess {\r\n  readonly type: typeof WS_SIGN_CONNECTION_SUCCESS;\r\n};\r\nexport interface IWsSignConnectionError {\r\n  readonly type: typeof WS_SIGN_CONNECTION_ERROR;\r\n  readonly payload: string;\r\n};\r\nexport interface IWsSignConnectionClosed {\r\n  readonly type: typeof WS_SIGN_CONNECTION_CLOSED;\r\n};\r\nexport interface IWsSignGetMessage {\r\n  readonly type: typeof WS_SIGN_GET_MESSAGE;\r\n  readonly payload: TOrderWSAll;\r\n};\r\nexport interface IWsSignConnectionStart {\r\n  readonly type: typeof WS_SIGN_CONNECTION_START;\r\n};\r\nexport interface IWsSignConnectionStop {\r\n  readonly type: typeof WS_SIGN_CONNECTION_STOP;\r\n};\r\n\r\nexport type TWsSignActions = \r\n  | IWsSignConnectionSuccess\r\n  | IWsSignConnectionError\r\n  | IWsSignConnectionClosed\r\n  | IWsSignGetMessage\r\n  | IWsSignConnectionStart\r\n  | IWsSignConnectionStop\r\n;\r\n\r\nconst wsSignInit = (): TWsSignActions => (\r\n  {\r\n    type: WS_SIGN_CONNECTION_START\r\n  }\r\n);\r\n\r\nconst wsSignClose = (): TWsSignActions => (\r\n  {\r\n    type: WS_SIGN_CONNECTION_STOP\r\n  }\r\n);\r\n\r\nconst wsSignConnectionSuccess = (): TWsSignActions => (\r\n  {\r\n    type: WS_SIGN_CONNECTION_SUCCESS\r\n  }\r\n);\r\n\r\nconst wsSignConnectionError = (error: string): TWsSignActions => (\r\n  {\r\n    type: WS_SIGN_CONNECTION_ERROR,\r\n    payload: error\r\n  }\r\n);\r\n\r\nconst wsSignConnectionClosed = (): TWsSignActions => (\r\n  {\r\n    type: WS_SIGN_CONNECTION_CLOSED\r\n  }\r\n);\r\n\r\nconst wsSignGetMessage = (data: TOrderWSAll): TWsSignActions => (\r\n  {\r\n    type: WS_SIGN_GET_MESSAGE,\r\n    payload: data\r\n  }\r\n);\r\n\r\nexport {\r\n  wsSignConnectionSuccess,\r\n  wsSignConnectionError,\r\n  wsSignConnectionClosed,\r\n  wsSignGetMessage,\r\n  wsSignInit,\r\n  wsSignClose\r\n};","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from '../types/redux';\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n","import { IItem, EItemIcon } from '../../services/types';\r\ninterface IDataMenu {\r\n  left: ReadonlyArray<IItem>;\r\n  right: ReadonlyArray<IItem>;\r\n}\r\n\r\n// TODO menu data\r\nconst dataMenu: IDataMenu = {\r\n  left: [\r\n    {\r\n      \"id\": \"1\",\r\n      \"name\": \"Конструктор\",\r\n      \"href\": \"/\",\r\n      \"icon\": EItemIcon.burgerIcon,\r\n      \"exact\": true  \r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"name\": \"Лента заказов\",\r\n      \"href\": \"/feed\",\r\n      \"icon\": EItemIcon.listIcon,\r\n      \"exact\": false   \r\n    },\r\n  ],\r\n  right: [\r\n    {\r\n      \"id\": \"1\",\r\n      \"name\": \"Личный кабинет\",\r\n      \"href\": \"/profile\",\r\n      \"icon\": EItemIcon.profileIcon,\r\n      \"exact\": false   \r\n    }\r\n  ],\r\n\r\n}  ;\r\n\r\n\r\nexport default dataMenu;\r\n","import React, { FC } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from '../../../services/hooks';\r\nimport styles from './MenuItem.module.css';\r\nimport { BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { EItemIcon, IItem } from '../../../services/types/menu';\r\n//import PropTypes from \"prop-types\";\r\nimport {  TIconProps} from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons/utils\";\r\n\r\ntype TComponentsIcon = {\r\n    burgerIcon: ({ type }: TIconProps) => JSX.Element,\r\n    listIcon: ({ type }: TIconProps) => JSX.Element,\r\n    profileIcon: ({ type }: TIconProps) => JSX.Element\r\n};\r\n\r\nconst componentsIcon = {\r\n    burgerIcon: BurgerIcon,\r\n    listIcon: ListIcon,\r\n    profileIcon: ProfileIcon\r\n};\r\n\r\n\r\ninterface IPropsMenuItem {\r\n item : IItem\r\n};\r\n\r\n\r\nconst MenuItem: FC<IPropsMenuItem> = ({ item } ) => {\r\n    const { isAuthorized, user, lastUpdated, isFetching } = useSelector((store) => store.sign);\r\n    const MenuIcon= componentsIcon[item.icon] ;\r\n    return (\r\n        <li >\r\n            <NavLink\r\n                to={item.href}\r\n                className={`${styles.menu_link} pr-5 pl-5`}\r\n                activeClassName={styles.menu_link_active}\r\n                exact={item.exact}\r\n            >\r\n            {/* <a className={`${styles.menu_link} pr-5 pl-5`} href={item.href} > */}\r\n                <MenuIcon type=\"secondary\" />                \r\n                <span className=\"text text_type_main-default pl-2\">\r\n                    { isAuthorized ? (item.icon === EItemIcon.profileIcon ? (user.email) : (item.name)) : (item.name)}\r\n                </span>\r\n            {/* </a> */}\r\n            </NavLink>    \r\n        </li>\r\n    )\r\n}\r\n\r\n// MenuItem.propTypes = {\r\n//     item: PropTypes.shape(\r\n//         {\r\n//             id: PropTypes.string,\r\n//             name: PropTypes.string,\r\n//             href: PropTypes.string,\r\n//             icon: PropTypes.string,\r\n//         }\r\n//     ).isRequired,\r\n\r\n// };\r\nexport default MenuItem;","import page from './MenuItem';\r\n\r\nexport default page;","import page from './AppHeader';\r\n\r\nexport default page;","import React, { FC} from \"react\";\r\nimport { NavLink} from 'react-router-dom';\r\nimport styles from './AppHeader.module.css';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport dataMenu from \"../../utils/data/data-menu\";\r\nimport MenuItem from \"./menu-item\";\r\n\r\n\r\nconst  AppHeader: FC = () => {\r\n\r\n  return (\r\n    <div className={`${styles.container} pt-4 pb-4 p`}>\r\n      <nav>\r\n        <ul className={styles.menu}>\r\n          {dataMenu.left.map((item) => (\r\n            <MenuItem item={item} key={item.id} />\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n\r\n      <NavLink to=\"/\" title=\"Stellar burgers\" className={styles.logo}>\r\n        <Logo />\r\n      </NavLink>\r\n      <nav>\r\n        <ul className={styles.menu_right}>\r\n          {dataMenu.right.map((item) => (\r\n            <MenuItem item={item} key={item.id} />\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader;\r\n","import page from './ConstructorItem';\r\n\r\nexport default page;","import React, { FC } from \"react\";\r\nimport {\r\n    ConstructorElement\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TIngredient } from \"../../../services/types\";\r\nimport styles from './ConstructorItem.module.css';\r\n\r\ninterface IConstructorItem {\r\n    itemData: TIngredient,\r\n    type: \"top\" | \"bottom\",\r\n    isLocked: boolean\r\n};\r\n\r\nconst ConstructorItem: FC<IConstructorItem> = ({ itemData, type, isLocked }) => {\r\n    \r\n    return (\r\n        <li className={`${styles.item} mb-4 pl-8 pr-4'}`}>\r\n            \r\n            {/* <div className={styles.item_elem}> */}\r\n            <ConstructorElement\r\n                text={`${itemData.name} ${type === 'top' ? '(верх)' : ''} ${type === 'bottom' ? '(низ)' : ''} `}\r\n                thumbnail={itemData.image_mobile}\r\n                price={itemData.price}\r\n                type={type}\r\n                isLocked={ isLocked}\r\n            />\r\n            {/* </div> */}\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ConstructorItem;","export const ItemTypes = {\r\n    FILLERS: 'fillers',\r\n  }","import React, { FC, useRef } from \"react\";\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { useDispatch } from '../../../services/hooks';\r\nimport {\r\n    DELETE_CONSTRUCTOR_INGREDIENT\r\n} from '../../../services/constants/actionTypes';\r\nimport { ItemTypes } from '../../../services/constants/itemTypes';\r\nimport {\r\n    ConstructorElement,\r\n    DragIcon\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TIngredient, TId } from \"../../../services/types\";\r\nimport styles from './ConstructorItemSwap.module.css';\r\nconst style = {\r\n    cursor: 'move',\r\n};\r\n\r\ninterface IConstructorItemSwap {\r\n    itemData: TIngredient,\r\n    type?: \"top\" | \"bottom\",\r\n    isLocked?: boolean,\r\n    handlerId: TId,\r\n    index:  number,\r\n    moveElem: (dragIndex: number, hoverIndex: number) => void,\r\n    id: TId\r\n};\r\n\r\nconst ConstructorItemSwap: FC<IConstructorItemSwap> = ({ itemData, index, isLocked, type, moveElem, id }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => dispatch({ type: DELETE_CONSTRUCTOR_INGREDIENT, payload: index });\r\n\r\n    const ref = useRef(null);\r\n\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: ItemTypes.FILLERS,\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            };\r\n        },\r\n        hover(item: {id: string, index: number}, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex: number = item.index;\r\n            const hoverIndex: number = index;\r\n\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n\r\n            //dispatch({ type: SWAP_CONSTRUCTOR_INGREDIENT, payload: { dragIndex, hoverIndex } })\r\n            moveElem(dragIndex, hoverIndex);\r\n           \r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: ItemTypes.FILLERS,\r\n        item: () => {\r\n            return { id, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = 1; // TODO проработать позже логику перемещения прозрачности за элементом isDragging ? 0.2 : 1;\r\n    drag(drop(ref));\r\n\r\n\r\n    return (\r\n        <li className={`${styles.item} pb-4 ${isLocked ? 'pl-8 pr-4' : 'pr-2'}`} ref={ref} style={{ ...style, opacity }} data-handler-id={handlerId} >\r\n            {!isLocked && (\r\n                <span className={styles.drag_icon}>\r\n                    <DragIcon type='secondary' />\r\n                </span>\r\n            )\r\n            }\r\n            {/* <div className={styles.item_elem}> */}\r\n            <ConstructorElement\r\n                text={`${itemData.name} ${type === 'top' ? '(верх)' : ''} ${type === 'bottom' ? '(низ)' : ''} `}\r\n                thumbnail={itemData.image_mobile}\r\n                price={itemData.price}\r\n                isLocked={isLocked}\r\n                type={type}\r\n                handleClose={handleClose}\r\n            />\r\n            {/* </div> */}\r\n        </li>\r\n    )\r\n}\r\n\r\n// ConstructorItemSwap.propTypes = {\r\n//     itemData: PropTypes.shape(\r\n//         {\r\n//             _id: PropTypes.string,\r\n//             name: PropTypes.string,\r\n//             type: PropTypes.string,\r\n//             proteins: PropTypes.number,\r\n//             fat: PropTypes.number,\r\n//             carbohydrates: PropTypes.number,\r\n//             calories: PropTypes.number,\r\n//             price: PropTypes.number,\r\n//             image: PropTypes.string,\r\n//             image_mobile: PropTypes.string,\r\n//             image_large: PropTypes.string,\r\n//             __v: PropTypes.number,\r\n//         }\r\n//     ).isRequired,\r\n//     type: PropTypes.string,\r\n//     isLocked: PropTypes.bool\r\n// };\r\n\r\nexport default ConstructorItemSwap;","import page from './ConstructorItemSwap';\r\n\r\nexport default page;","import page from './BurgerConstructor';\r\n\r\nexport default page;","import React, { FC } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport {\r\n  addConstructorIngredient,\r\n  swapConstructorIngredient\r\n} from \"../../services/actions\";\r\nimport {\r\n  Button,\r\n  CurrencyIcon\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ConstructorItem from \"./constructor-item\";\r\nimport ConstructorItemSwap from \"./constructor-item-swap\";\r\nimport { TIngredient, TId } from \"../../services/types\";\r\nimport styles from './BurgerConstructor.module.css';\r\n\r\n\r\ninterface IBurgerConstructor {\r\n  openModal: () => void,\r\n}\r\n\r\nconst BurgerConstructor: FC<IBurgerConstructor> = ({ openModal }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector(state => state.cart);\r\n  const prodData = [...cart.data];\r\n\r\n  const onDropHandler = (data: TIngredient) => dispatch(\r\n    addConstructorIngredient(data)\r\n    //{ type: ADD_CONSTRUCTOR_INGREDIENT, payload: data }\r\n  );\r\n  const [, dropTarget] = useDrop({\r\n    accept: 'ingredient',\r\n    drop: onDropHandler\r\n  });\r\n\r\n  \r\n    const coverData = cart.sortedData.bun && Object.keys(cart.sortedData.bun).length ? [cart.sortedData.bun] : [cart.sortedData.empty] ;\r\n  \r\n  const middleData = prodData && Array.isArray(prodData)\r\n    && cart.sortedData.fillers\r\n    ;\r\n  //const totalBurgerPrice = cart.total;\r\n  const totalBurgerPrice = React.useMemo(\r\n    () =>\r\n      Array.isArray(prodData) &&\r\n      [...coverData, ...middleData, ...coverData].reduce((sum, item) => {\r\n        return sum + item.price;\r\n      }, 0),\r\n    [coverData, middleData]\r\n  );\r\n\r\n  interface IRenderMiddle {\r\n    item: TIngredient;\r\n    indx: string;\r\n    \r\n  }\r\n  const renderMiddle = (item: TIngredient, indx: number) => {\r\n    return (\r\n      <ConstructorItemSwap\r\n        key={indx}\r\n        itemData={item}\r\n        handlerId={indx}\r\n        moveElem={moveElem}\r\n        index={indx}\r\n        id={item._id}\r\n      />\r\n    );\r\n  };\r\n  const moveElem = (dragIndex: number, hoverIndex: number) => dispatch(\r\n    swapConstructorIngredient(dragIndex, hoverIndex)\r\n    //{ type: SWAP_CONSTRUCTOR_INGREDIENT, payload: { dragIndex, hoverIndex } }\r\n  );\r\n\r\n\r\n  return (\r\n    <section className={`${styles.container} pt-25`} ref={dropTarget}>\r\n      <ul className={styles.item_list}>\r\n        {coverData && Array.isArray(coverData) && coverData.map((item) => (\r\n\r\n          <ConstructorItem\r\n            key={item._id}\r\n            itemData={item}\r\n            type='top'\r\n            isLocked\r\n          />\r\n        )\r\n        )\r\n        }\r\n        <li className={`mb-4`} key='middle'>\r\n          <ul className={styles.scroll_list}>\r\n            {\r\n              middleData &&\r\n              Array.isArray(middleData) &&\r\n              middleData.map(\r\n                renderMiddle\r\n              )\r\n            }\r\n          </ul>\r\n        </li>\r\n\r\n        {coverData && Array.isArray(coverData) && coverData.map(item => (\r\n          <ConstructorItem\r\n            key={item._id}\r\n            itemData={item}\r\n            type='bottom'\r\n            isLocked\r\n          />\r\n\r\n        )\r\n        )\r\n        }\r\n      </ul>\r\n      <div className={`${styles.checkout_container} pr-8`}>\r\n        <div className=\"mr-10\">\r\n          <span className=\"text text_type_digits-medium mr-2\">\r\n            {totalBurgerPrice}\r\n          </span>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          onClick={openModal}\r\n        >\r\n          Оформить заказ\r\n          </Button>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport default BurgerConstructor;\r\n","import React, { FC } from \"react\";\r\nimport { useDispatch } from '../../../services/hooks';\r\nimport { useDrag } from 'react-dnd';\r\nimport {\r\n    CurrencyIcon,\r\n    Counter\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TIngredient, TId } from \"../../../services/types\";\r\nimport styles from './IngredientItem.module.css';\r\nconst style = {\r\n    cursor: 'move',\r\n};\r\n\r\ninterface IIngredientItem {\r\n    itemData: TIngredient,\r\n    itemCounter?: number,    \r\n    onItemClick: () => void\r\n};\r\n\r\nconst IngredientItem: FC<IIngredientItem> = ({ itemData, itemCounter, onItemClick }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [{ isDragging }, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: itemData,\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    });\r\n    function handleClick() {\r\n        onItemClick();\r\n        history.replace(`/ingredients/${itemData._id}`, { background: true });\r\n    };\r\n    const opacity = isDragging ? 0.2 : 1;\r\n    //console.log(itemData);\r\n    return (\r\n        <li className={styles.item} onClick={handleClick} ref={dragRef} style={{ ...style, opacity }}>\r\n            {itemCounter && (itemCounter > 0) ? <Counter count={itemCounter} size=\"default\" /> : null}\r\n            <img src={itemData.image} className={`${styles.item_image}`} alt={itemData.name} />\r\n\r\n            <p className={`text text_type_digits-default ${styles.item_description} mt-1 mb-1`}>\r\n                <span className=\"mr-2\">{itemData.price}</span>\r\n                <CurrencyIcon type=\"secondary\" />\r\n            </p>\r\n\r\n            <h3 className={`text text_type_main-default ${styles.item_name}`}>{itemData.name}</h3>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\n// IngredientItem.propTypes = {\r\n//     itemData: PropTypes.shape(\r\n//         {\r\n//             _id: PropTypes.string,\r\n//             name: PropTypes.string,\r\n//             type: PropTypes.string,\r\n//             proteins: PropTypes.number,\r\n//             fat: PropTypes.number,\r\n//             carbohydrates: PropTypes.number,\r\n//             calories: PropTypes.number,\r\n//             price: PropTypes.number,\r\n//             image: PropTypes.string,\r\n//             image_mobile: PropTypes.string,\r\n//             image_large: PropTypes.string,\r\n//             __v: PropTypes.number,\r\n//         }\r\n//     ).isRequired,\r\n//     onItemClick: PropTypes.func.isRequired,\r\n// };\r\n\r\n\r\nexport default IngredientItem;\r\n","import page from './IngredientItem';\r\n\r\nexport default page;","import page from './BurgerIngredients';\r\n\r\nexport default page;","import React, { FC, useEffect, useState } from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport {\r\n  Tab\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { TId, EItemType } from \"../../services/types\";\r\nimport IngredientItem from \"./ingredient-item\";\r\n\r\nimport styles from './BurgerIngredients.module.css';\r\n\r\n\r\n\r\ninterface IBurgerIngredients {\r\n  openModal: () => void;\r\n}\r\n\r\nconst BurgerIngredients: FC<IBurgerIngredients> = ({ openModal }) => {\r\n  const [currentTab, setCurrentTab] = useState('buns');\r\n  const { cart, ingredients } = useSelector(state => ({ cart: state.cart, ingredients: state.ingredients }));\r\n  // const ingredients = useSelector(state => state.ingredients);\r\n  const prodData = [...ingredients.data];\r\n  //console.log(prodData);\r\n  // useEffect(\r\n  //   () => {\r\n  //     window.location.href = `#${currentTab}`;      \r\n  //   },\r\n  //   [currentTab]\r\n  // );\r\n\r\n  const [bunsRef, inViewBuns] = useInView({ threshold: 0 });\r\n  const [mainsRef, inViewFilling] = useInView({ threshold: 0 });\r\n  const [saucesRef, inViewSauces] = useInView({ threshold: 0 });\r\n  useEffect(() => {\r\n\r\n    if (inViewBuns) {\r\n      setCurrentTab(\"buns\");\r\n\r\n    }\r\n    else if (inViewSauces) {\r\n      setCurrentTab(\"sauces\");\r\n\r\n    }\r\n    else if (inViewFilling) {\r\n      setCurrentTab(\"mains\");\r\n\r\n    }\r\n  }, [inViewBuns, inViewFilling, inViewSauces]);\r\n\r\n  const setTab = (tab: string) => {\r\n    setCurrentTab(tab);\r\n    const element = document.getElementById(tab);\r\n    if (element) element.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  const buhData = prodData && Array.isArray(prodData)\r\n    && prodData.filter(\r\n      item => item.type === EItemType.typeBun\r\n    )\r\n    ;\r\n  const sauceData = prodData && Array.isArray(prodData)\r\n    && prodData.filter(\r\n      item => item.type === EItemType.typeSauce\r\n    )\r\n    ;\r\n  const mainData = prodData && Array.isArray(prodData)\r\n    && prodData.filter(\r\n      item => item.type === EItemType.typeMain\r\n    )\r\n    ;\r\n  const countItem = (itemId: TId) => cart.sortedData && cart.sortedData.fillers?.filter(item => item._id === itemId).length;\r\n  const countItemBun = (itemId: TId) => cart.sortedData && cart.sortedData.bun?._id === itemId;\r\n\r\n  return (\r\n    <section className={`${styles.container}`}>\r\n      <div className={styles.header_tabs}>\r\n        <h2 className=\"text text_type_main-large mt-10 mb-5 \">Соберите бургер</h2>\r\n        <div className={`${styles.tabs}`}>\r\n          <Tab value=\"buns\" active={currentTab === 'buns'} onClick={setTab}>\r\n            Булки\r\n            </Tab>\r\n          <Tab value=\"sauces\" active={currentTab === 'sauces'} onClick={setTab}>\r\n            Соусы\r\n            </Tab>\r\n          <Tab value=\"mains\" active={currentTab === 'mains'} onClick={setTab}>\r\n            Начинки\r\n            </Tab>\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.scroll_list} pr-4`}>\r\n\r\n        <section className={styles.sec_items} id=\"buns\" ref={bunsRef}>\r\n          <h2 className={`text text_type_main-medium ${styles.sec_title}`} >Булки</h2>\r\n          <ul className={`${styles.items_list}`}>\r\n            {buhData && Array.isArray(buhData) && buhData.map((item) => (\r\n              <IngredientItem\r\n                key={item._id}\r\n                itemData={item}\r\n                onItemClick={openModal}\r\n                itemCounter={countItemBun(item._id) ? 1 : 0}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </section>\r\n        <section className={styles.sec_items} id=\"sauces\" ref={saucesRef} >\r\n          <h2 className={`text text_type_main-medium ${styles.sec_title}`}>Соусы</h2>\r\n          <ul className={`${styles.items_list}`}>\r\n            {sauceData && Array.isArray(sauceData) && sauceData.map((item) => (\r\n              <IngredientItem\r\n                key={item._id}\r\n                itemData={item}\r\n                onItemClick={openModal}\r\n                itemCounter={countItem(item._id)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </section>\r\n        <section className={styles.sec_items} id=\"mains\" ref={mainsRef} >\r\n          <h2 className={`text text_type_main-medium ${styles.sec_title}`}>Начинки</h2>\r\n          <ul className={`${styles.items_list}`}>\r\n            {mainData && Array.isArray(mainData) && mainData.map((item) => (\r\n              <IngredientItem\r\n                key={item._id}\r\n                itemData={item}\r\n                onItemClick={openModal}\r\n                itemCounter={countItem(item._id)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </section>\r\n\r\n      </div>\r\n    </section>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default BurgerIngredients;\r\n","import page from './IngredientDetailsItem';\r\n\r\nexport default page;","import React, { FC } from \"react\";\r\n\r\nimport styles from './IngredientDetailsItem.module.css';\r\n\r\ninterface IIngredientDetailsItem {\r\n    title: string,\r\n    value: string | number    \r\n};\r\n\r\nconst IngredientDetailsItem: FC<IIngredientDetailsItem> = ({ title, value }) => (\r\n    <li className={styles.details_list_item}>\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n            {title}\r\n        </p>\r\n        <p className=\"text text_type_digits-default text_color_inactive\">\r\n            {value}\r\n        </p>\r\n    </li>\r\n);\r\n\r\nexport default IngredientDetailsItem;","import page from './IngredientDetails';\r\n\r\nexport default page;","import React, { FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useParams } from \"react-router-dom\";\r\nimport IngredientDetailsItem from \"./ingredient-details-item\";\r\n\r\nimport styles from './IngredientDetails.module.css';\r\nimport { ITEM_DETAILS } from '../../services/constants/constValue'\r\nimport { setViewItem } from '../../services/actions/viewedItem'\r\n\r\ntype TParamTypes = {\r\n  id: string;\r\n}\r\n\r\nconst IngredientDetails: FC = () => {\r\n  const { id } = useParams<TParamTypes>();\r\n  const dispatch = useDispatch();\r\n  const ingredients = useSelector(state => state.ingredients);\r\n \r\n  useEffect(() => {\r\n      const itemData = ingredients.data?.find(item => item._id == id);\r\n      //console.log(itemData);\r\n      itemData && dispatch(setViewItem(itemData));\r\n    }, [id,ingredients.data]\r\n  );\r\n  \r\n\r\n  const viewedItem = useSelector(state => state.viewedItem.data);\r\n \r\n  if (!viewedItem._id) {\r\n    return (\r\n      <h4 className='text text_type_main-medium mt-4 mb-8'>\r\n        Загрузка данных...\r\n      </h4>\r\n    )\r\n  };\r\n\r\n  return (\r\n\r\n    <div className={styles.container}>\r\n      <img\r\n        src={viewedItem.image_large}\r\n        alt={viewedItem.name}\r\n        title={viewedItem.name}\r\n      />\r\n      <h4 className='text text_type_main-medium mt-4 mb-8'>\r\n        {viewedItem.name}\r\n      </h4>\r\n      <ul className={`${styles.details_list} mb-15`}>\r\n\r\n        <IngredientDetailsItem title={ITEM_DETAILS.calories} value={viewedItem.calories} />\r\n        <IngredientDetailsItem title={ITEM_DETAILS.proteins} value={viewedItem.proteins} />\r\n        <IngredientDetailsItem title={ITEM_DETAILS.fat} value={viewedItem.fat} />\r\n        <IngredientDetailsItem title={ITEM_DETAILS.carbohydrates} value={viewedItem.carbohydrates} />\r\n\r\n      </ul>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default IngredientDetails;\r\n","import type { TIngredient } from '../types/data';\r\nimport {\r\n    SET_VIEW_ITEM,\r\n    RESET_VIEW_ITEM\r\n} from '../constants/actionTypes';\r\n\r\nexport interface ISetViewItem {\r\n    readonly type: typeof SET_VIEW_ITEM;\r\n    readonly payload: TIngredient;\r\n  };\r\nexport interface IResetViewItem {\r\n    readonly type: typeof RESET_VIEW_ITEM;\r\n  };  \r\n    \r\nexport type TViewedItemActions = \r\n    | ISetViewItem\r\n    | IResetViewItem\r\n  ;\r\n\r\nexport const setViewItem = (data: TIngredient): TViewedItemActions => ({\r\n    type: SET_VIEW_ITEM,\r\n    payload:  data\r\n  });\r\n  \r\nexport const resetViewItem = (): TViewedItemActions => ({\r\n    type: RESET_VIEW_ITEM\r\n  });\r\n\r\n","import React, { FC } from \"react\";\r\n\r\nimport styles from './ModalOverlay.module.css';\r\n\r\n\r\ninterface IModalOverlay {\r\n  closeModal: () => void\r\n}\r\n\r\nconst ModalOverlay: FC<IModalOverlay> = ({ closeModal }) => {\r\n  return (\r\n    <div className={styles.modal_overlay} onClick={closeModal} />\r\n  );\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import page from './Modal';\r\n\r\nexport default page;","import React, { FC, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\nimport {\r\n  CloseIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from \"../modal-overlay/ModalOverlay\";\r\n\r\ninterface IModal {\r\n  modalTitle: string,\r\n  closeModal: () => void,\r\n  \r\n};\r\n\r\nconst Modal: FC<IModal> = ({ children, closeModal, modalTitle }) => {\r\n\r\n  const closeModalByEscKey = (e: KeyboardEvent ) => {\r\n    if (e.key === 'Escape')\r\n      closeModal();\r\n    e.stopImmediatePropagation();\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', closeModalByEscKey);\r\n    return () => {\r\n      document.removeEventListener('keydown', closeModalByEscKey);\r\n    };\r\n  }, []);\r\n\r\n  const modalRoot = document.querySelector('#app-modals');\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <ModalOverlay closeModal={closeModal} />\r\n      <section className={styles.modal}>\r\n        <div className={`${styles.header} pr-10 pt-10 pl-10`} >\r\n          <h2 className=\"text text_type_main-large \">{modalTitle}</h2>\r\n          <CloseIcon type=\"primary\" onClick={closeModal} />\r\n        </div>\r\n\r\n        {/* <button className={styles.close} onClick={closeModal}>Закрыть окно</button> */}\r\n        {children}\r\n      </section>\r\n    </>,\r\n    modalRoot\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/spin-white.e284a982.svg\";","export default __webpack_public_path__ + \"static/media/order-done.05f77629.svg\";","import { formatDistanceToNow } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\nfunction formatDistanceDayToNow(date: Date) {\r\n    const oneDay = 1000 * 3600 * 24;\r\n    const distance = Date.now() - date.getTime();\r\n    if (distance < oneDay && distance > 0) {\r\n      return \"Cегодня\";\r\n    } else if (distance < (oneDay * 2)) {\r\n      return \"Вчера\";\r\n    }\r\n    return formatDistanceToNow(date, { locale: ru, addSuffix: true })\r\n}\r\n  \r\nexport {\r\n    formatDistanceDayToNow   \r\n};","function leftFillNum(num: number, targetLength: number) {\r\n  return num.toString().padStart(targetLength, '0');\r\n}\r\n\r\nexport {\r\n  leftFillNum   \r\n};","import page from './OrderDetails';\r\n\r\nexport default page;","import React, { FC } from \"react\";\r\nimport { useSelector} from '../../services/hooks';\r\nimport spinWhite from '../../images/spin-white.svg';\r\nimport orderDone from '../../images/order-done.svg';\r\nimport { leftFillNum } from '../../services/functions';\r\nimport styles from './OrderDetails.module.css';\r\n\r\n\r\n\r\nconst OrderDetails: FC = () => {\r\n  const order = useSelector(state => state.order);\r\n  return (\r\n    <>\r\n      <h1 className=\"text text_type_digits-large mt-30\">{leftFillNum(order.numberOrd,7)}</h1>\r\n      <p className=\"text text_type_main-medium mt-8\">\r\n        идентификатор заказа\r\n          </p>\r\n      <img\r\n        className={`mt-15 ${styles.icon_done}`}\r\n        src={order.isFetching ? spinWhite : orderDone}\r\n        alt=\"Заказ готовится\"\r\n      />\r\n      <p className=\"text text_type_main-default mt-15\">Ваш заказ начали готовить</p>\r\n      <p className=\"text text_type_main-default text_color_inactive mt-2 mb-30\">Дождитесь готовности на орбитальной станции</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetails;\r\n","export default __webpack_public_path__ + \"static/media/icon-info.0c317422.svg\";","import page from './OrderFailed';\r\n\r\nexport default page;","import React, { FC } from \"react\";\r\nimport { useSelector} from '../../services/hooks';\r\nimport orderInfo from '../../images/icon-info.svg';\r\nimport { leftFillNum } from '../../services/functions';\r\n\r\n\r\nconst OrderFailed: FC = () => {\r\n  const order = useSelector(state => state.order);\r\n  return (\r\n    <>\r\n      <h1 className=\"text text_type_digits-large mt-30\">{leftFillNum(0, 7)}</h1>\r\n      <p className=\"text text_type_main-medium mt-8\">\r\n        что-то пошло не так\r\n      </p>\r\n      <p className=\"text text_type_main-medium mt-8\">\r\n          {order.error}\r\n      </p>\r\n          \r\n      <img className=\"mt-15\" src={orderInfo} alt=\"Заказ не готовится\" />\r\n      <p className=\"text text_type_main-default mt-15\">Мы не можем приготовить пустой заказ</p>\r\n      <p className=\"text text_type_main-default text_color_inactive mt-2 mb-30\">Соберите бургер и мы его вам приготовим</p>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default OrderFailed;\r\n","const INITIAL_FORM_LOGIN = {\r\n    email: '',\r\n    password: ''    \r\n};\r\nconst INITIAL_FORM_REGISTER = {\r\n    name: '',\r\n    email: '',\r\n    password: ''    \r\n};\r\nconst INITIAL_FORM_RESET_PASSWD = {\r\n    password: '',\r\n    token: ''    \r\n};\r\nconst INITIAL_FORM_FORGOT_PASSWD = {\r\n    email: ''   \r\n};\r\n\r\nconst INITIAL_FORM_PROFILE = {\r\n    name: '',\r\n    email: '',\r\n    password: ''    \r\n};\r\n\r\n\r\n\r\nexport {\r\n    INITIAL_FORM_LOGIN,\r\n    INITIAL_FORM_REGISTER,\r\n    INITIAL_FORM_RESET_PASSWD,\r\n    INITIAL_FORM_FORGOT_PASSWD,\r\n    INITIAL_FORM_PROFILE\r\n};","import page from './Login';\r\n\r\nexport default page;","import React, { FC, useState } from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { Link} from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './Login.module.css';\r\nimport { INITIAL_FORM_LOGIN } from '../../services/constants/initialValue'\r\nimport { getLogin } from '../../services/actions/sign';\r\nimport { TSignDataLogin } from '../../services/types';\r\n\r\n\r\nconst Login: FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n \r\n  const [form, setForm] = useState<TSignDataLogin>(INITIAL_FORM_LOGIN);\r\n  //const { isAuthorized } = useSelector((store) => store.sign);\r\n  const onFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name: fieldName, type } = e.target;\r\n    const value = type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setForm(prev => ({ ...prev, [fieldName]: value }));\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    //console.log('onSubmit Login');\r\n    //console.log(form);\r\n    dispatch(getLogin(form));\r\n    e.preventDefault();\r\n    onReset();\r\n  };\r\n\r\n  const onReset = () => {\r\n    setForm(INITIAL_FORM_LOGIN);\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.login}>\r\n      <h3 className={`${styles.title} text text_type_main-medium`}>Вход</h3>\r\n      <form className={styles.form} onSubmit={onSubmit} >\r\n        <div className={styles.input_container}>\r\n          <Input onChange={onFieldChange} value={form.email} name={\"email\"} size=\"default\" placeholder={\"E-mail\"} />\r\n          <PasswordInput onChange={onFieldChange} value={form.password} name=\"password\" size=\"default\" />\r\n          <div className={styles.button_container}>\r\n            <Button type=\"primary\" size=\"medium\">Войти</Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className={styles.link_container}>\r\n        <p className={`${styles.text} text text_type_main-default text_color_inactive`}>\r\n          Вы — новый пользователь?\r\n          </p>\r\n        <Link to=\"/register\" className={`${styles.link} text text_type_main-default`}>\r\n          Зарегистрироваться\r\n        </Link>\r\n      </div>\r\n      <div className={styles.link_container}>\r\n        <p className={`${styles.text} text text_type_main-default text_color_inactive`}>\r\n          Забыли пароль?\r\n          </p>\r\n        <Link to=\"/forgot-password\" className={`${styles.link} text text_type_main-default`}>\r\n          Восстановить пароль\r\n          </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import page from './Register';\r\n\r\nexport default page;","import React, { FC, useState } from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './Register.module.css';\r\nimport { INITIAL_FORM_REGISTER } from '../../services/constants/initialValue';\r\nimport { getRegister }  from '../../services/actions/sign';\r\nimport { TSignDataWPassword } from '../../services/types';\r\n\r\n\r\n\r\nconst Register: FC = () => {\r\n\r\n  const dispatch = useDispatch();  \r\n  const [form, setForm] = useState<TSignDataWPassword>(INITIAL_FORM_REGISTER);\r\n\r\n  const onFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name: fieldName, type } = e.target;\r\n    const value = type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setForm(prev => ({ ...prev, [fieldName]: value }));\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    console.log('onSubmit Register');\r\n    dispatch(getRegister(form));\r\n    console.log(form);\r\n    e.preventDefault();\r\n    \r\n    onReset();\r\n  };\r\n\r\n  const onReset = () => {\r\n    setForm(INITIAL_FORM_REGISTER);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      <h3 className={`${styles.title} text text_type_main-medium`}>Регистрация</h3>\r\n      <form className={styles.form} onSubmit={onSubmit} >\r\n        <div className={styles.input_container}>\r\n          <Input onChange={onFieldChange} value={form.name} name={\"name\"} size=\"default\" placeholder={\"Имя\"} />\r\n          <Input onChange={onFieldChange} value={form.email} name={\"email\"} size=\"default\" placeholder={\"E-mail\"} />\r\n          <PasswordInput onChange={onFieldChange} value={form.password} name=\"password\" size=\"default\" />\r\n          <div className={styles.button_container}>\r\n            <Button type=\"primary\" size=\"medium\">Зарегистрироваться</Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className={styles.link_container}>\r\n        <p className={`${styles.text} text text_type_main-default text_color_inactive`}>\r\n          Уже зарегитрированы?\r\n          </p>\r\n        <Link to=\"/login\" className={`${styles.link} text text_type_main-default`}>\r\n          Войти\r\n        </Link>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import page from './Profile';\r\n\r\nexport default page;","import React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport {\r\n  Button,\r\n  EmailInput,\r\n  Input,\r\n  PasswordInput\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './Profile.module.css';\r\nimport { INITIAL_FORM_PROFILE } from '../../services/constants/initialValue';\r\nimport { updateProfile, getProfile }  from '../../services/actions/sign';\r\nimport { TSignDataWPassword } from '../../services/types';\r\n\r\n\r\nconst Profile: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [form, setForm] = useState<TSignDataWPassword>(INITIAL_FORM_PROFILE);\r\n  const { isAuthorized, user, lastUpdated, isFetching } = useSelector((store) => store.sign);\r\n\r\n  useEffect(\r\n    () => {      \r\n      setForm(prev => ( { ...prev, ...user }))\r\n    },\r\n    [isAuthorized, lastUpdated]\r\n  ); \r\n  const onFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name: fieldName, type } = e.target;\r\n    const value = type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setForm(prev => ({ ...prev, [fieldName]: value }));\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    console.log('onSubmit Profile');\r\n    console.log(form);\r\n    dispatch(updateProfile(form));\r\n    e.preventDefault();\r\n    \r\n  };\r\n\r\n  const onReset = () => {\r\n    setForm(INITIAL_FORM_PROFILE);\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n      <form className={styles.form} onSubmit={onSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          onChange={onFieldChange}\r\n          value={form.name}\r\n          icon=\"EditIcon\"\r\n          name=\"name\"         \r\n          size=\"default\"\r\n        />\r\n        <EmailInput onChange={onFieldChange} value={form.email} name=\"email\" />\r\n        \r\n        <PasswordInput onChange={onFieldChange} value={form.password} name=\"password\" />\r\n        <div className={styles.button_container}>\r\n          <Button type=\"primary\" size=\"medium\">{isFetching ? 'Идет сохранение' : 'Сохранить' }</Button>\r\n        </div>\r\n      </form>\r\n   \r\n  );\r\n  \r\n}\r\n\r\nexport default Profile;\r\n","import page from './ForgotPassword';\r\n\r\nexport default page;","import React, { FC, useState } from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Input\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './ForgotPassword.module.css';\r\nimport { INITIAL_FORM_FORGOT_PASSWD } from '../../services/constants/initialValue';\r\nimport { TSignDataForgoutPassword } from \"../../services/types\";\r\nimport { getForgotPassword }  from '../../services/actions/sign';\r\n\r\n\r\n\r\nconst ForgotPassword: FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  \r\n  const [form, setForm] = useState<TSignDataForgoutPassword>(INITIAL_FORM_FORGOT_PASSWD);\r\n\r\n  const onFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name: fieldName, type } = e.target;\r\n    const value = type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setForm(prev => ({ ...prev, [fieldName]: value }));\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    //console.log('onSubmit ForgotPassword');\r\n    //console.log(form);\r\n    dispatch(getForgotPassword(form, history));\r\n    e.preventDefault();\r\n    onReset();\r\n  };\r\n\r\n  const onReset = () => {\r\n    setForm(INITIAL_FORM_FORGOT_PASSWD);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      <h3 className={`${styles.title} text text_type_main-medium`}>Восстановление пароля</h3>\r\n      <form className={styles.form} onSubmit={onSubmit} noValidate>\r\n        <div className={styles.input_container}>\r\n          <Input onChange={onFieldChange} value={form.email} name={\"email\"} size=\"default\" placeholder={\"Укажите e-mail\"} />          \r\n          <div className={styles.button_container}>\r\n            <Button type=\"primary\" size=\"medium\">Восстановить</Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className={styles.link_container}>\r\n        <p className={`${styles.text} text text_type_main-default text_color_inactive`}>\r\n          Вспомнили пароль?\r\n          </p>\r\n        <Link to=\"/login\" className={`${styles.link} text text_type_main-default`}>\r\n          Войти\r\n        </Link>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import page from './ResetPassword';\r\n\r\nexport default page;","import React, { FC, useState } from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { Link, useHistory, useLocation, Redirect } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './ResetPassword.module.css';\r\nimport { INITIAL_FORM_RESET_PASSWD } from '../../services/constants/initialValue'\r\nimport { getResetPassword }  from '../../services/actions/sign';\r\nimport { TSignDataLogResetPassword } from '../../services/types';\r\n\r\ninterface ILocation extends Location {\r\n  resetPassword: string;\r\n}\r\n\r\nconst ResetPassword: FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation<ILocation>();\r\n  const [form, setForm] = useState<TSignDataLogResetPassword>(INITIAL_FORM_RESET_PASSWD);\r\n\r\n  const onFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name: fieldName, type } = e.target;\r\n    const value = type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setForm(prev => ({ ...prev, [fieldName]: value }));\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    console.log('onSubmit Login');\r\n    console.log(form);\r\n    dispatch(getResetPassword(form, history));\r\n    e.preventDefault();\r\n    onReset();\r\n  };\r\n\r\n  const onReset = () => {\r\n    setForm(INITIAL_FORM_RESET_PASSWD);\r\n  }\r\n  if (history.action === \"PUSH\" && location.state?.resetPassword) {\r\n    return (\r\n      <div className={styles.login}>\r\n        <h3 className={`${styles.title} text text_type_main-medium`}>Восстановление пароля</h3>\r\n        <form className={styles.form} onSubmit={onSubmit} >\r\n          <div className={styles.input_container}>\r\n            <PasswordInput onChange={onFieldChange} value={form.password} name=\"password\" size=\"default\" />\r\n            <Input onChange={onFieldChange} value={form.token} name=\"token\" size=\"default\" placeholder={\"Введите код из письма\"} />\r\n            <div className={styles.button_container}>\r\n              <Button type=\"primary\" size=\"medium\">Войти</Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className={styles.link_container}>\r\n        <p className={`${styles.text} text text_type_main-default text_color_inactive`}>\r\n          Вспомнили пароль?\r\n          </p>\r\n        <Link to=\"/login\" className={`${styles.link} text text_type_main-default`}>\r\n          Войти\r\n        </Link>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Redirect to=\"/login\" />\r\n  )\r\n}\r\n\r\nexport default ResetPassword;\r\n","import ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nexport default ProtectedRoute;\r\n","import { FC } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"../../services/hooks\";\r\n\r\ninterface IProtectedRoute { \r\n  path?: string | string[],\r\n  exact?: boolean\r\n}\r\n\r\nconst ProtectedRoute: FC<IProtectedRoute> = ({ children, ...rest }) => {\r\n  const { isAuthorized } = useSelector((store) => store.sign);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return isAuthorized ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import SignRoute from './SignRoute';\r\nexport default SignRoute;\r\n","import { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { FC } from \"react\";\r\n\r\ninterface ISignRoute { \r\n  path?: string | string[],\r\n  exact?: boolean\r\n}\r\n\r\ninterface ILocation extends Location {\r\n  from: {\r\n    pathname: string\r\n  };\r\n}\r\n\r\nconst SignRoute: FC<ISignRoute> = ({ children, ...rest }) => {\r\n  const { isAuthorized } = useSelector((store) => store.sign);\r\n  const location = useLocation<ILocation>();\r\n  //console.log('SignRoute isAuthorized ', isAuthorized);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => {\r\n        return isAuthorized ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: location.state?.from ? location.state?.from.pathname : \"/\",\r\n            }}\r\n          />\r\n        ) : (\r\n          children\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SignRoute;\r\n","import page from './Orders';\r\n\r\nexport default page;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n//import { useHistory, useLocation } from 'react-router-dom';\r\nimport { OrdersCard } from '..';\r\nimport { wsSignInit, wsSignClose } from '../../services/actions';\r\nimport styles from './Orders.module.css';\r\n\r\n\r\nconst Orders: FC = () => {\r\n  const dispatch = useDispatch();  \r\n  const { wsConnected, data } = useSelector((store) => store.wsSign);\r\n  const { orders } = data;\r\n  useEffect(() => {\r\n    dispatch(wsSignInit());\r\n    return () => {\r\n      dispatch(wsSignClose());\r\n    };\r\n  }, [dispatch]);\r\n\r\n\r\n\r\n  if (!wsConnected)\r\n    return (\r\n      <h4 className='text text_type_main-medium mt-4 mb-8'>\r\n        Соединяемся с сервером, ожидайте...\r\n      </h4>\r\n    )\r\n  if (!orders?.length)\r\n    return (\r\n      <h4 className='text text_type_main-medium mt-4 mb-8'>\r\n        Ваших заказов пока нет...\r\n      </h4>\r\n    )\r\n\r\n  return (\r\n\r\n    <div className={styles.order_list}>\r\n      {orders?.map((order) =>\r\n        order.ingredients?.length && <OrdersCard key={order._id} order={order} />\r\n      )}\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Orders;\r\n","import page from './ProfileNav';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './ProfileNav.module.css';\r\n\r\nconst ProfileNav: FC = () => {\r\n  return (    \r\n        <nav className={styles.nav__list}>\r\n         \r\n            <NavLink to=\"/profile\" exact className={`${styles.menu_link} text text_type_main-medium `} activeClassName={styles.menu_link_active}>Профиль</NavLink>\r\n            <NavLink to=\"/profile/orders\" className={`${styles.menu_link} text text_type_main-medium `} activeClassName={styles.menu_link_active}>История заказов</NavLink>\r\n            <NavLink to=\"/profile/logout\" className={`${styles.menu_link} text text_type_main-medium `} activeClassName={styles.menu_link_active}>Выход</NavLink>\r\n         \r\n        </nav>   \r\n  );  \r\n}\r\n\r\nexport default ProfileNav;\r\n","import page from './OrdersFeed';\r\n\r\nexport default page;","import React, { FC, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport styles from './OrdersFeed.module.css';\r\nimport { wsAllInit, wsAllClose } from '../../services/actions';\r\nimport { OrdersCard } from '..';\r\n\r\nconst OrdersFeed: FC = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const { wsConnected, data } = useSelector((store) => store.wsAll);\r\n\r\n  useEffect(() => {\r\n    dispatch( wsAllInit() );\r\n    return () => {\r\n      dispatch( wsAllClose() );\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const { orders, total, totalToday } = data;\r\n\r\n  const doneOrders = useMemo(() => {\r\n    return orders?.filter((order) => {\r\n      return order.status === \"done\";\r\n    });\r\n  }, [orders]);\r\n\r\n  const pendingOrders = useMemo(() => {\r\n    return orders?.filter((order) => {\r\n      return order.status === \"pending\";\r\n    });\r\n  }, [orders]);\r\n\r\n  if (!wsConnected)\r\n  return (\r\n    <h4 className='text text_type_main-medium mt-4 mb-8'>\r\n      Соединяемся с кухней, ожидайте...\r\n    </h4>\r\n  )\r\n  if (!orders?.length)\r\n  return (\r\n    <h4 className='text text_type_main-medium mt-4 mb-8'>\r\n      На кухне заказов пока нет...\r\n    </h4>\r\n  )\r\n  return (\r\n      <>\r\n        <h1 className={`text text_type_main-large ${styles.header}`}>Лента заказов</h1>\r\n        <div className={styles.content_wrapper}>\r\n          <div className={styles.order_list}>\r\n            {orders.map((order) => (\r\n              order.ingredients?.length && <OrdersCard key={order._id} order={order}  />\r\n            ))}\r\n          </div>\r\n\r\n          <div className={styles.info_wrapper}>\r\n            <div className={styles.info_table}>\r\n              <div className={styles.done}>\r\n                <h2 className=\"text text_type_main-medium\">\r\n                  Готовы:\r\n                </h2>\r\n                <ul className={styles.list}>\r\n                  {doneOrders.map((doneOrder) => (\r\n                    <li\r\n                      key={doneOrder._id}\r\n                      className={`text text_type_digits-default ${styles.list_item} ${styles.list_item_done}`}\r\n                    >\r\n                      {doneOrder.number}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className={styles.progress}>\r\n                <h2 className=\"text text_type_main-medium\">\r\n                  В работе:\r\n                </h2>\r\n                <ul className={styles.list}>\r\n                  {pendingOrders.map((pendingOrder) => (\r\n                    <li\r\n                      key={pendingOrder._id}\r\n                      className={`text text_type_digits-default ${styles.list_item}`}\r\n                    >\r\n                      {pendingOrder.number}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className={styles.total_count}>\r\n              <h2 className=\"text text_type_main-medium\">\r\n                Выполнено за все время:\r\n              </h2>\r\n              <p className={`text text_type_digits-large ${styles.count}`}>\r\n                {total}\r\n              </p>\r\n            </div>\r\n            <div className={styles.today_count}>\r\n              <h2 className=\"text text_type_main-medium\">\r\n                Выполнено за сегодня:\r\n              </h2>\r\n              <p className={`text text_type_digits-large ${styles.count}`}>\r\n                {totalToday}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>      \r\n    ) \r\n}\r\nexport default OrdersFeed;\r\n","import page from './OrdersCard';\r\n\r\nexport default page;","import React, { FC, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './OrdersCard.module.css';\r\nimport { TOrder, EOrderStatus, TGroupedIngredient, TId } from \"../../services/types\";\r\n//import { ORDER_STATUS } from '../../services/constants/constValue';\r\nimport { formatDistanceDayToNow } from '../../services/functions';\r\nimport { setViewOrder } from '../../services/actions';\r\n\r\ninterface IOrdersCard {\r\n  order: TOrder //| TOrderWS\r\n}\r\n\r\nconst OrdersCard: FC<IOrdersCard> = ({ order }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { wsConnected : cardOfProfile } = useSelector((store) => store.wsSign);\r\n  const { data: ingredients } = useSelector((store) => store.ingredients);\r\n  // console.log(order);\r\n  // console.log(ingredients);\r\n  \r\n  const orderIngredientsWDetails = useMemo(() => {\r\n    return order.ingredients?.map((id: TId) =>\r\n      ingredients.find(\r\n        ingredient => ingredient._id === id\r\n      )\r\n    )\r\n  }, [order, ingredients]);\r\n\r\n  const orderIngredients = useMemo(() => {\r\n    const orderIngredientsWDetailsGroups: Array<TGroupedIngredient> = [];\r\n    orderIngredientsWDetails?.forEach(\r\n      (elem) => {\r\n        const existingGroups = orderIngredientsWDetailsGroups.find(groupItem => groupItem._id == elem?._id);\r\n        if (!existingGroups) {          \r\n          const count = order?.ingredients.filter(id => id == elem._id).length || 0;\r\n          orderIngredientsWDetailsGroups.push(\r\n            {\r\n              ...elem,\r\n              count \r\n            }\r\n          );\r\n        }   \r\n    });\r\n\r\n    return orderIngredientsWDetailsGroups;\r\n  }, [order, orderIngredientsWDetails]);\r\n\r\n  const orderTotalPrice = useMemo(() => {\r\n    return orderIngredients.reduce((sum, item) => {\r\n      return (sum += item.price*item.count);\r\n    }, 0);\r\n  }, [orderIngredients]);\r\n\r\n  const openOrderDetails = () => {\r\n    //console.log(cardOfProfile);\r\n    dispatch(setViewOrder(\r\n      {\r\n        ...order,\r\n        groupedIngredients: orderIngredients,\r\n        ingredientsWDetails: orderIngredientsWDetails,\r\n        orderTotalPrice\r\n      }\r\n    ));\r\n    \r\n    history.replace(`${cardOfProfile ? '/profile/orders' : '/feed'}/${order._id}/${order.number}`, { background: true });\r\n      \r\n  };\r\n\r\n  const createdAt = new Date(order.createdAt);\r\n  //console.log(  orderIngredients); \r\n\r\n  return (\r\n    <>\r\n      <div className={styles.order_item} onClick={openOrderDetails}>\r\n        <div className={styles.order_info}>\r\n          <p className={`text text_type_digits-default ${styles.order_number}`}>\r\n            #{order.number}\r\n          </p>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {`${formatDistanceDayToNow(createdAt)}, ${format(createdAt, 'HH:mm \\'i-\\'z')}`}\r\n          </p>\r\n        </div>\r\n        <h2 className=\"text text_type_main-medium\">\r\n          {order.name}\r\n        </h2>\r\n        {cardOfProfile && (\r\n          <p className={`text text_type_main-default ${order.status === \"done\" ? styles.done : \"\"}`}>\r\n            {EOrderStatus[order.status]}\r\n            {/* {ORDER_STATUS[order.status]} */}\r\n        </p>\r\n        )}\r\n        \r\n        <div className={styles.ingredients_info}>\r\n          <div className={styles.ingredients_list}>\r\n            {orderIngredients.map((ingredient, idx) => (\r\n              <div\r\n                className={styles.ingredient_wrapper}\r\n                key={idx}\r\n                style={{ zIndex: orderIngredients.length - idx }}\r\n\r\n              >\r\n                <div className={styles.ingredient}>\r\n                  <img src={ingredient.image_mobile} width=\"64\" />\r\n                  {ingredient.count > 1 && (\r\n                    <div className={styles.count_wrapper}>\r\n                      <p className=\"text text_type_main-default\">\r\n                        {`+${ingredient.count - 1}`}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={styles.ingredients_price}>\r\n            <p className=\"text text_type_digits-default\">\r\n              {orderTotalPrice}\r\n            </p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n// OrdersCard.propTypes = {\r\n//   order: PropTypes.shape(\r\n//     {\r\n//       number: PropTypes.number,\r\n//       _id: PropTypes.string,\r\n//       createdAt: PropTypes.string,\r\n//       name: PropTypes.string,\r\n//       status: PropTypes.string,\r\n//       ingredients: PropTypes.array\r\n//     }\r\n//   ).isRequired\r\n// };\r\n\r\n\r\nexport default OrdersCard;\r\n","import page from './OrdersCardDetails';\r\n\r\nexport default page;","import React, { FC } from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { format } from 'date-fns';\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './OrdersCardDetails.module.css';\r\n//import { ORDER_STATUS } from '../../services/constants/constValue';\r\nimport { formatDistanceDayToNow } from '../../services/functions';\r\nimport { EOrderStatus } from \"../../services/types\";\r\n\r\n\r\nconst OrdersCardDetails: FC = () => {\r\n  \r\n  const { data: order } = useSelector((store) => store.viewedOrder);\r\n  //console.log(order);\r\n  \r\n\r\n  const createdAt = order.createdAt ? new Date(order.createdAt) : new Date();\r\n  //console.log(  orderIngredients); \r\n\r\n  return (\r\n    <>\r\n      <h2 className={`text text_type_digits-default ${styles.header}`}>\r\n        #{order.number}\r\n      </h2>\r\n\r\n      <div className={styles.card_details_wrapper}>\r\n      \r\n        <h2 className=\"text text_type_main-medium\">\r\n          {order.name}\r\n        </h2>\r\n          <p\r\n            className={`text text_type_main-default ${styles.status} ${\r\n              order.status === \"done\" ? styles.done : \"\"\r\n            }`}\r\n          >\r\n            {EOrderStatus[order.status]}\r\n            {/* {ORDER_STATUS[order.status]} */}\r\n          </p>\r\n        <h2 className=\"text text_type_main-medium\">\r\n          Состав:\r\n        </h2>\r\n          <div className={styles.ingredients_list}>\r\n            {order.groupedIngredients?.map((ingredient, idx) => (\r\n              <div className={styles.ingredient_wrapper} key={idx}>\r\n                <div\r\n                  className={styles.img_wrapper}\r\n                  style={{ zIndex: order.groupedIngredients.length - idx }}\r\n                >\r\n                  <div className={styles.img}>\r\n                    <img src={ingredient.image_mobile} width=\"64\" />\r\n                  </div>\r\n                </div>\r\n                <p className={`text text_type_main-default ${styles.name}`}>{ingredient.name}</p>\r\n                <div className={styles.ingredient_cost}>\r\n                  <p className=\"text text_type_digits-default\">{`${ingredient.count}x${ingredient.price}`}</p>\r\n                  <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={styles.ingredients_footer}>\r\n            <p className=\"text text_type_main-default text_color_inactive\">\r\n              {`${formatDistanceDayToNow(createdAt)}, ${format(createdAt, 'HH:mm \\'i-\\'z')}`}\r\n            </p>\r\n            <div className={styles.ingredient_cost}>\r\n              <p className=\"text text_type_digits-default\">\r\n                {order.orderTotalPrice}\r\n              </p>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n       \r\n    </div>\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default OrdersCardDetails;\r\n","import page from './Home';\r\n\r\nexport default page;","import React, { useState, FC } from 'react';\r\nimport { Route, Switch, useLocation, useRouteMatch, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport {\r\n  BurgerConstructor,\r\n  BurgerIngredients,\r\n  IngredientDetails,\r\n  Modal,\r\n  OrderDetails,\r\n  OrderFailed\r\n} from '../../components';\r\nimport {\r\n  IngredientPage\r\n} from '../../pages'\r\n//import { getIngredients } from '../../services/actions/ingredients';\r\nimport { getOrderNumber, setOrderError } from '../../services/actions/order';\r\nimport { resetViewItem } from '../../services/actions/viewedItem'\r\nimport styles from './Home.module.css';\r\n\r\n\r\n\r\nconst HomePage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  //const [state, setState] = useState(INIT_APP);\r\n  const state = useSelector(state => state.ingredients);\r\n  const cart = useSelector(state => state.cart);\r\n  const [visibleOrderDetails, setVisibleOrderDetails] = useState(false);\r\n  const [visibleOrderFailed, setVisibleOrderFailed] = useState(false);\r\n  const [visibleIngredientDetails, setVisibleIngredientDetails] = useState(false);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { isAuthorized } = useSelector((store) => store.sign);\r\n  // useEffect(\r\n  //   () => {\r\n  //     dispatch(getIngredients());\r\n  //   },\r\n  //   [dispatch]\r\n  // );\r\n\r\n\r\n\r\n  const openModalOrderDetails = () => {\r\n    if (isAuthorized) {\r\n      if (cart.sortedData.fillers.length && Object.keys(cart.sortedData.bun).length) {\r\n        const idsCard = cart.sortedData.fillers.map(item => item._id);\r\n        //console.log(idsCard);      \r\n        dispatch(getOrderNumber(idsCard));\r\n        setVisibleOrderDetails(true);\r\n      } else {\r\n        dispatch(setOrderError(\"Пустой заказ\"));\r\n        setVisibleOrderFailed(true);\r\n      }\r\n    } else {\r\n      history.push(`/login`, { from: location });      \r\n    }\r\n\r\n  }\r\n  const openModalIngredientDetails = () => {\r\n    setVisibleIngredientDetails(true)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    visibleOrderDetails && setVisibleOrderDetails(false);\r\n    visibleIngredientDetails && dispatch(resetViewItem());;\r\n    visibleIngredientDetails && setVisibleIngredientDetails(false);\r\n    visibleOrderFailed && setVisibleOrderFailed(false);\r\n  }\r\n\r\n  const match = useRouteMatch('/ingredients/:id'); \r\n  if (history.action === 'POP' && match && match.isExact) {    \r\n    return (\r\n      <Switch>\r\n        <Route path=\"/ingredients/:id\">\r\n          <IngredientPage />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {/* <header className={styles.nav_panel}>\r\n        <AppHeader />\r\n      </header> */}\r\n      {state.data && state.data.length && (\r\n        <DndProvider backend={HTML5Backend}>\r\n          <main className={styles.main}>\r\n\r\n            <BurgerIngredients openModal={openModalIngredientDetails} />\r\n            {cart.data.length && <BurgerConstructor openModal={openModalOrderDetails} />}\r\n\r\n          </main>\r\n        </DndProvider>\r\n      )\r\n      }\r\n      {visibleOrderDetails &&\r\n        <Modal modalTitle={null} closeModal={closeModal}>\r\n          <OrderDetails />\r\n        </Modal>\r\n      }\r\n      {visibleOrderFailed &&\r\n        <Modal modalTitle={null} closeModal={closeModal}>\r\n          <OrderFailed />\r\n        </Modal>\r\n      }\r\n      {visibleIngredientDetails &&\r\n        <Modal modalTitle='Детали ингредиента' closeModal={closeModal} >\r\n          <IngredientDetails />\r\n        </Modal>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default HomePage;\r\n","import page from './Login';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport {\r\n  Login\r\n} from '../../components';\r\nimport styles from './Login.module.css';\r\n\r\nconst LoginPage: FC = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Login />\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import page from './Profile';\r\n\r\nexport default page;","import React, { FC, useEffect, useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { getLogout, getProfile }  from '../../services/actions/sign';\r\nimport { getRefreshToken }  from '../../services/actions';\r\nimport {\r\n  Profile,\r\n  ProfileNav,\r\n  Orders\r\n} from '../../components';\r\nimport styles from './Profile.module.css';\r\nimport { PROFILE_NAV_TEXT } from '../../services/constants/constValue';\r\n\r\n\r\nconst ProfilePage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { isAuthorized } = useSelector((store) => store.sign);\r\n  const [navText, setNavText] = useState(PROFILE_NAV_TEXT.profile);\r\n  useEffect(\r\n    () => {\r\n      dispatch(getProfile());      \r\n    },\r\n    []\r\n  ); \r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/profile/logout') {\r\n      const token = getRefreshToken();\r\n      if (token) {\r\n        dispatch(getLogout(token));\r\n        history.push('/login');        \r\n      }\r\n    } else if (location.pathname === '/profile/orders') {\r\n      setNavText(PROFILE_NAV_TEXT.orders)\r\n    }\r\n    else if (location.pathname === '/profile') {\r\n      setNavText(PROFILE_NAV_TEXT.profile)\r\n    }\r\n\r\n  }, [location]);\r\n  if (!isAuthorized) {\r\n    return null;\r\n  }\r\n  return (\r\n     <div className={styles.wrapper}>\r\n   \r\n      <div className={styles.profile}>\r\n        <div className={styles.nav_container}>\r\n          <ProfileNav />\r\n          <p className={`${styles.nav__text} text text_type_main-default text_color_inactive`}>\r\n            {navText}\r\n          </p>\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/profile/orders\">\r\n            <Orders />\r\n          </Route>          \r\n          <Route path=\"/profile\">\r\n            <Profile />\r\n          </Route>\r\n        </Switch>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ProfilePage;\r\n\r\n\r\n","import page from './Register';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport {\r\n  Register\r\n} from '../../components';\r\nimport styles from './Register.module.css';\r\n\r\nconst RegisterPage: FC = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Register />\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import page from './ForgotPassword';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport {\r\n  ForgotPassword\r\n} from '../../components';\r\nimport styles from './ForgotPassword.module.css';\r\n\r\nconst ForgotPasswordPage: FC = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <ForgotPassword />\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n","import page from './ResetPassword';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport {\r\n  ResetPassword\r\n} from '../../components';\r\nimport styles from './ResetPassword.module.css';\r\n\r\nconst ResetPasswordPage: FC = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <ResetPassword />\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default ResetPasswordPage;\r\n","import page from './NotFound';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styles from './NotFound.module.css';\r\n\r\nconst NotFound404Page: FC = () => {\r\n  \r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        \r\n        <div className={styles.content}>\r\n          <h1>Oops! 404 Error</h1>\r\n          <h6>{ pathname}</h6>            \r\n          <p>The page you requested does not exist</p>\r\n          <br />\r\n          <br />\r\n          <p>check the address or try <Link to='/' className={styles.link}>homepage</Link></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound404Page;\r\n","import page from './Ingredient';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport {\r\n  IngredientDetails\r\n} from '../../components';\r\nimport styles from './Ingredient.module.css';\r\n\r\nconst IngredientPage: FC = () => {\r\n  return (\r\n    <div className={ styles.wrapper }>\r\n      <h1 className={ styles.title }>Детали ингредиента</h1>\r\n      <IngredientDetails />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientPage;\r\n","import page from './OrdersFeed';\r\n\r\nexport default page;","import React, { FC } from 'react';\r\nimport {\r\n  OrdersFeed\r\n} from '../../components';\r\nimport styles from './OrdersFeed.module.css';\r\n\r\nconst OrdersFeedPage: FC = () => {\r\n  return (\r\n    <div className={styles.wrapper}>      \r\n      <OrdersFeed />\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default OrdersFeedPage;\r\n","import page from './OrdersCardDetails';\r\n\r\nexport default page;\r\n\r\n","import React, { FC, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  OrdersCardDetails\r\n} from '../../components';\r\nimport {\r\n  wsAllInit,\r\n  wsAllClose,\r\n  setViewOrder,\r\n  getOrderDetails\r\n} from '../../services/actions';\r\n\r\nimport styles from './OrdersCardDetails.module.css';\r\nimport { TGroupedIngredient, TId } from \"../../services/types\";\r\n\r\ninterface IParams {\r\n  id: string,\r\n  number: string\r\n}\r\nconst OrdersCardDetailsPage: FC = () => {\r\n  const { id, number } = useParams<IParams>();\r\n  const dispatch = useDispatch();\r\n  //const history = useHistory();\r\n  //const { wsConnected, data } = useSelector((store) => store.wsAll);\r\n  const { data: ingredients } = useSelector((store) => store.ingredients);\r\n  const {\r\n    isLoaded,\r\n    isFetching,\r\n     data: order\r\n  } = useSelector((store) => store.viewedOrder);\r\n\r\n  useEffect( () => {\r\n      dispatch(\r\n        getOrderDetails(number)\r\n      )\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  \r\n\r\n  // useEffect(() => {\r\n  //   dispatch(wsAllInit());\r\n  //   return () => {\r\n  //     dispatch(wsAllClose());\r\n  //   };\r\n  // }, [dispatch]);\r\n\r\n\r\n  // const order = useMemo(() => {\r\n  //   return data && data.orders?.find(item => item._id === id)\r\n  // }, [data]);\r\n  //console.log('isFetching - ', isFetching)\r\n  //console.log(order)\r\n // console.log('isLoaded - ',isLoaded)\r\n  // if (history.action === 'POP' ) {   \r\n    \r\n  const orderIngredientsWDetails = useMemo(() => {\r\n    return order?.ingredients?.map((idItem) =>\r\n      ingredients.find(\r\n        ingredient => ingredient._id === idItem\r\n      )\r\n    )\r\n  }, [order, ingredients]);\r\n  //console.log('orderIngredientsWDetails ', orderIngredientsWDetails)\r\n  \r\n  const orderIngredients = useMemo(() => {\r\n    const orderIngredientsWDetailsGroups: Array<TGroupedIngredient> = [];\r\n    orderIngredientsWDetails?.length && orderIngredientsWDetails.forEach(\r\n      (elem) => {\r\n        const existingGroups = orderIngredientsWDetailsGroups.find(groupItem => groupItem._id === elem?._id);\r\n        if (!existingGroups) {\r\n          const count = order.ingredients?.filter(item => item === elem?._id).length || 0;\r\n          orderIngredientsWDetailsGroups.push(\r\n            {\r\n              ...elem,\r\n              count\r\n            }\r\n          );\r\n        }\r\n      });\r\n\r\n    return orderIngredientsWDetailsGroups;\r\n  }, [order, orderIngredientsWDetails]);\r\n\r\n  const orderTotalPrice = useMemo(() => {\r\n    return orderIngredients.reduce((sum, item) => {\r\n      return (sum += item.price*item.count);\r\n    }, 0);\r\n  }, [orderIngredients]);\r\n\r\n  \r\n\r\n  if (!isLoaded && (order?._id === id) && orderTotalPrice ) {\r\n    dispatch(setViewOrder(\r\n      {\r\n        ...order,\r\n        groupedIngredients: orderIngredients,\r\n        ingredientsWDetails: orderIngredientsWDetails,\r\n        orderTotalPrice\r\n      }\r\n    ));\r\n  }\r\n  \r\n    if (isFetching) {\r\n      return (\r\n        <h4 className={`text text_type_main-medium mt-4 mb-8 ${styles.wrapper}`}>\r\n          Соединяемся с кухней, ожидайте...\r\n        </h4>\r\n      )\r\n    }\r\n    if (isLoaded && !order) {\r\n      return (\r\n        <h4 className={`text text_type_main-medium mt-4 mb-8 ${styles.wrapper}`}>\r\n          Данных о заказе пока нет. Идет загрузка, ожидайте...\r\n        </h4>\r\n      )\r\n    }\r\n    if (order?._id !== id || !orderTotalPrice) {\r\n      return (\r\n        <h4 className={`text text_type_main-medium mt-4 mb-8 ${styles.wrapper}`}>\r\n          Ищем заказ, ожидайте...\r\n        </h4>\r\n      )\r\n    }\r\n    \r\n  \r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <OrdersCardDetails />\r\n    </div>\r\n  );\r\n}\r\nexport default OrdersCardDetailsPage;\r\n","import page from './App';\r\n\r\nexport default page;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport {\r\n  ProtectedRoute,\r\n  SignRoute,\r\n  AppHeader\r\n} from '..';\r\n\r\nimport {\r\n  HomePage,\r\n  LoginPage,\r\n  RegisterPage,\r\n  ForgotPasswordPage,\r\n  ResetPasswordPage,\r\n  ProfilePage,\r\n  OrdersCardDetailsPage,\r\n  OrdersFeedPage,\r\n  NotFound404Page\r\n} from '../../pages';\r\n\r\nimport { getIngredients } from '../../services/actions/ingredients';\r\nimport { getProfile } from '../../services/actions/sign';\r\n\r\nimport styles from './App.module.css';\r\n\r\n\r\nconst  App: FC = () => {\r\n  const dispatch = useDispatch();\r\n  //const state = useSelector(state => state.ingredients);\r\n  //const cart = useSelector(state => state.cart);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getProfile());\r\n    },\r\n    [dispatch]\r\n  );\r\n  useEffect(\r\n    () => {      \r\n      dispatch(getIngredients());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // console.log(state);\r\n  //console.log(cart);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <header className={styles.nav_panel}>\r\n        <AppHeader />\r\n      </header>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n        <Route path=\"/feed/:id/:number\">\r\n          <OrdersCardDetailsPage />\r\n        </Route>\r\n        <Route path=\"/feed/:id\">\r\n          <OrdersCardDetailsPage />\r\n        </Route>\r\n        <Route exact path=\"/feed\">          \r\n          <OrdersFeedPage />\r\n        </Route>\r\n        <SignRoute path=\"/login\">\r\n          <LoginPage />\r\n        </SignRoute>\r\n        <SignRoute path=\"/register\">\r\n          <RegisterPage />\r\n        </SignRoute>\r\n        <SignRoute path=\"/forgot-password\">\r\n          <ForgotPasswordPage />\r\n        </SignRoute>\r\n        <SignRoute path=\"/reset-password\">\r\n          <ResetPasswordPage />\r\n        </SignRoute>\r\n        <ProtectedRoute path=\"/profile/orders/:id/:number\" exact >\r\n          <OrdersCardDetailsPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders/:id\" exact >\r\n          <OrdersCardDetailsPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile\">\r\n          <ProfilePage />\r\n        </ProtectedRoute>\r\n        <Route path=\"/ingredients/:id\">\r\n          <HomePage />\r\n        </Route>\r\n        <Route>\r\n          <NotFound404Page />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from \"./services/store\";\r\nimport './index.css';\r\nimport App from './components/app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n//console.log(store.getState())\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router> \r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2ooj1\",\"input_container\":\"Login_input_container__1XMgP\",\"title\":\"Login_title__2kq3k\",\"form\":\"Login_form__30fxV\",\"button_container\":\"Login_button_container__3k0H7\",\"link_container\":\"Login_link_container__3neEr\",\"text\":\"Login_text__2txu3\",\"link\":\"Login_link__2vIYT\",\"error_active\":\"Login_error_active__1lt62\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_item\":\"OrdersCard_order_item__21Wj1\",\"order_number\":\"OrdersCard_order_number__PqkUF\",\"order_info\":\"OrdersCard_order_info__1EL-r\",\"done\":\"OrdersCard_done__3j-0T\",\"ingredients_info\":\"OrdersCard_ingredients_info__uUJMJ\",\"ingredients_price\":\"OrdersCard_ingredients_price__2JtXE\",\"ingredients_list\":\"OrdersCard_ingredients_list__1mA7d\",\"ingredient_wrapper\":\"OrdersCard_ingredient_wrapper__1fNaW\",\"ingredient\":\"OrdersCard_ingredient__36cXD\",\"count_wrapper\":\"OrdersCard_count_wrapper__3z4-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Register_login__jMdqL\",\"input_container\":\"Register_input_container__FgVpc\",\"title\":\"Register_title__46PPV\",\"form\":\"Register_form__3chbh\",\"button_container\":\"Register_button_container__1wjyw\",\"link_container\":\"Register_link_container__2mKJt\",\"text\":\"Register_text__28quU\",\"link\":\"Register_link__2TvYO\",\"error_active\":\"Register_error_active__Y4X4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"ForgotPassword_login__1moRV\",\"input_container\":\"ForgotPassword_input_container__3dK5r\",\"title\":\"ForgotPassword_title__23MOG\",\"form\":\"ForgotPassword_form__3HGBJ\",\"button_container\":\"ForgotPassword_button_container__YXKX_\",\"link_container\":\"ForgotPassword_link_container__2dJTX\",\"text\":\"ForgotPassword_text__3HmuG\",\"link\":\"ForgotPassword_link__bpU_A\",\"error_active\":\"ForgotPassword_error_active__33raY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"ResetPassword_login__2kc5A\",\"input_container\":\"ResetPassword_input_container__1fFEd\",\"title\":\"ResetPassword_title__1Y9G7\",\"form\":\"ResetPassword_form__2XYFq\",\"button_container\":\"ResetPassword_button_container__tXj7l\",\"link_container\":\"ResetPassword_link_container__3_5_s\",\"text\":\"ResetPassword_text__2_R2T\",\"link\":\"ResetPassword_link__1fHut\",\"error_active\":\"ResetPassword_error_active__1ESfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_link\":\"ProfileNav_menu_link__2oynG\",\"menu_link_active\":\"ProfileNav_menu_link_active__2G4RY\",\"nav_list\":\"ProfileNav_nav_list__3BH3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppHeader_container__1zozY\",\"menu\":\"AppHeader_menu__2gG-w\",\"menu_right\":\"AppHeader_menu_right__2PeGu\",\"menu_link\":\"AppHeader_menu_link__SFTtu\",\"logo\":\"AppHeader_logo__3Ulhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BurgerConstructor_container__1YqRO\",\"scroll_list\":\"BurgerConstructor_scroll_list__pMjuN\",\"item_list\":\"BurgerConstructor_item_list__2wcKU\",\"checkout_container\":\"BurgerConstructor_checkout_container__36wt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"IngredientItem_item__3nJUh\",\"item_image\":\"IngredientItem_item_image__3Nj3G\",\"item_description\":\"IngredientItem_item_description__2xIUD\",\"item_name\":\"IngredientItem_item_name__roSwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1xaAj\",\"nav_container\":\"Profile_nav_container__27KjW\",\"nav__text\":\"Profile_nav__text__24YxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotFound_wrapper__qmJen\",\"container\":\"NotFound_container__2kNbu\",\"content\":\"NotFound_content__2j7BC\",\"link\":\"NotFound_link__2fJR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrdersCardDetails_wrapper__2vbls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_link\":\"MenuItem_menu_link__1A0pR\",\"menu_link_active\":\"MenuItem_menu_link_active__3bO9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ConstructorItemSwap_item__5yYAx\",\"item_elem\":\"ConstructorItemSwap_item_elem__1DAhb\",\"drag_icon\":\"ConstructorItemSwap_drag_icon__1X0nX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IngredientDetails_container__3Ddsn\",\"details_list\":\"IngredientDetails_details_list__239YK\",\"details_list_item\":\"IngredientDetails_details_list_item__3j83Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3PRq6\",\"header\":\"Modal_header__HwDl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2B6xb\",\"nav_container\":\"Profile_nav_container__3aI_l\",\"nav__text\":\"Profile_nav__text__1xuOT\",\"form\":\"Profile_form__38iM1\",\"button_container\":\"Profile_button_container__FsveU\",\"error\":\"Profile_error___eM-w\",\"error_active\":\"Profile_error_active__337cO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__3e0MA\",\"nav_panel\":\"Home_nav_panel__2U_tb\",\"main\":\"Home_main__2CCVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Ingredient_wrapper__2v9W7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3rTqQ\",\"nav_panel\":\"App_nav_panel__mJ4OB\",\"main\":\"App_main__1NLxf\"};"],"sourceRoot":""}